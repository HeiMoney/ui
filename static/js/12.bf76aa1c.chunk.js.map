{"version":3,"sources":["components/Button/Button.tsx","components/CardRow/CardRow.tsx","components/ActionSelect/ActionSelect.tsx","hooks/useStake.ts","hooks/useClaim.ts","hooks/useExit.ts","views/LPPool/LPPool.tsx","views/LPPools/LPPools.tsx"],"names":["StyledButton","styled","button","props","theme","color","grey","fontSize","padding","margin","width","Button","children","disabled","onClick","boxShadow","buttonColor","buttonPadding","buttonMargin","buttonSize","size","CardRowWrapper","div","marginTop","marginBottom","CardRow","StyledMain","StyledLeftSelectButton","isSelect","undefined","StyledMiddleSelectButton","StyledRightSelectButton","ActionSelect","actionNum","handleAction","useState","isStake","setIsStake","isClaim","setIsClaim","isWithdraw","setIsWithdraw","useEffect","backgroundColor","useStake","beiCash","useTiTICoreContracts","handleTransactionReceipt","useHandleTransactionReceipt","onStake","useCallback","amount","amountBn","parseUnits","toString","stake","useClaim","onClaim","claim","useExit","onExit","exit","MaxButton","StakeButton","style","display","flexDirection","justifyContent","alignItems","ClaimButton","WithdrawButton","BalanceRowWrapper","InputElement","input","StyledHeader","TextRowWrapper","LPPool","symbol","useParams","bankId","toUpperCase","setActionNum","number","lpAmountInput","setLPAmountInput","userStakeAmount","setUserStakeAmount","userStakeValue","setUserStakeValue","userUnclaimedRewards","setUserUnclaimedRewards","poolApy","setPoolApy","userLPAmount","setUserLPAmount","userReward","setUserReward","fetchStats","a","Promise","all","getStakedBalance","getRedeemableTribeRewards","getUSDCBalance","getRewardPerToken","getStartTime","stakedBalance","redeemableTribeRewards","userLPBal","rewardPerToken","starttime","Date","now","stakeValue","catch","err","console","error","stack","isUnlocked","paddingBottom","fontWeight","href","Card","bgColor","shadowColor","paddingTop","toFixed","position","top","left","src","usdcLogo","alt","height","daiLogo","ethLogo","wbtcLogo","type","value","onChange","e","target","valueAsNumber","placeholder","JoinButton","link","to","Link","LPCardWrapper","ImageRowWrapper","LPPools","path","useRouteMatch","Page","exact","usdc","dai","eth","wbtc"],"mappings":"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","file":"static/js/12.bf76aa1c.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ButtonProps {\r\n    children?: React.ReactNode,\r\n    disabled?: boolean,\r\n    onClick?: () => void,\r\n    boxShadow?: string,\r\n    buttonColor?: string,\r\n    fontSize?: string,\r\n    buttonPadding?: string,\r\n    buttonMargin?: string,\r\n    buttonSize?: number,\r\n    width?: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n                                           children,\r\n                                           disabled,\r\n                                           onClick,\r\n                                           boxShadow,\r\n                                           buttonColor,\r\n                                           fontSize,\r\n                                           buttonPadding,\r\n                                           buttonMargin,\r\n                                           buttonSize,\r\n                                           width\r\n                                       }) => {\r\n\r\n    return (\r\n        <StyledButton\r\n            boxShadow={boxShadow}\r\n            color={buttonColor}\r\n            disabled={disabled}\r\n            fontSize={fontSize}\r\n            onClick={onClick}\r\n            padding={buttonPadding}\r\n            margin={buttonMargin}\r\n            size={buttonSize}\r\n            width={width}\r\n        >\r\n            {children}\r\n        </StyledButton>\r\n    )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n    boxShadow: string,\r\n    color: string,\r\n    disabled?: boolean,\r\n    fontSize: string,\r\n    padding: string,\r\n    margin: string,\r\n    size: number,\r\n    width: string\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n    color: ${props => props.theme.color.grey[900]};\r\n    font-weight: 500;\r\n    font-size: ${props => props.fontSize};\r\n    padding: ${props => props.padding};\r\n    margin: ${props => props.margin};\r\n    width: ${props => props.width};\r\n    text-decoration: none;\r\n    transition: all 0.3s;\r\n    border: 0px solid #B5E3D5;\r\n    background-color: #08F3CB;\r\n    border-radius: 8px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    &:hover {\r\n        transform: scale(1.06, 1.06);\r\n    }\r\n`\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface CardRowProps {\r\n    children?: React.ReactNode,\r\n    marginTop: string,\r\n    marginBottom: string\r\n}\r\n\r\nconst CardRow: React.FC<CardRowProps> = ({children,marginTop,marginBottom}) => {\r\n    return (\r\n        <CardRowWrapper marginTop={marginTop} marginBottom={marginBottom}>\r\n            {children}\r\n        </CardRowWrapper>\r\n    )\r\n}\r\n\r\ninterface CardRowWrapperProps {\r\n    marginTop: string,\r\n    marginBottom: string\r\n}\r\n\r\nconst CardRowWrapper = styled.div<CardRowWrapperProps>`\r\n    position: relative;\r\n    margin-top: ${props => props.marginTop};\r\n    margin-bottom: ${props => props.marginBottom};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 80%;\r\n    color: #000;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport default CardRow\r\n","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ActionSelectProps {\r\n    actionNum?: number,\r\n    handleAction?: (actionNum: number) => void\r\n}\r\n\r\nconst ActionSelect: React.FC<ActionSelectProps> = ({actionNum,handleAction}) => {\r\n    const [isStake, setIsStake] = useState(true);\r\n    const [isClaim, setIsClaim] = useState(false);\r\n    const [isWithdraw, setIsWithdraw] = useState(false);\r\n\r\n    useEffect(() =>\r\n        {\r\n            if (actionNum === 0) {\r\n                setIsStake(true);\r\n                setIsClaim(false);\r\n                setIsWithdraw(false);\r\n            }\r\n            if (actionNum === 1) {\r\n                setIsStake(false);\r\n                setIsClaim(true);\r\n                setIsWithdraw(false);\r\n            }\r\n            if (actionNum === 2) {\r\n                setIsStake(false);\r\n                setIsClaim(false);\r\n                setIsWithdraw(true);\r\n            }\r\n        },\r\n        [actionNum]\r\n    )\r\n\r\n    return (\r\n        <StyledMain>\r\n            <StyledLeftSelectButton isSelect={isStake} onClick={()=>{handleAction(0)}} backgroundColor=\"#F0B90B\">Stake</StyledLeftSelectButton>\r\n            <StyledMiddleSelectButton isSelect={isClaim} onClick={()=>{handleAction(1)}} backgroundColor=\"#F0B90B\">Claim</StyledMiddleSelectButton>\r\n            <StyledRightSelectButton isSelect={isWithdraw} onClick={()=>{handleAction(2)}} backgroundColor=\"#F0B90B\">Withdraw</StyledRightSelectButton>\r\n        </StyledMain>\r\n    );\r\n};\r\n\r\nconst StyledMain = styled.div`\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding: 1px;\r\n    width: 30%\r\n`\r\n\r\n\r\ninterface StyledButtonProps {\r\n    isSelect: boolean,\r\n    backgroundColor: string;\r\n}\r\n\r\nconst StyledLeftSelectButton = styled.button<StyledButtonProps>`\r\n    align-items: center;\r\n    font-family: Futura;\r\n    outline:none;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding-top: 16px;\r\n    padding-bottom: 16px;\r\n    border: 0px solid #F0B90B;\r\n    border-right: 0px solid #F0B90B;\r\n    background-color: #262729;\r\n    color: ${props => !props.isSelect ? \"#747475\" : \"#FFF\"};\r\n    width: 60%;\r\n    transition: all 0.3s;\r\n    border-top-left-radius: 20px;\r\n    font-size: 16px;\r\n    pointer-events: ${props => !props.isSelect ? undefined : 'none'};\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: ${props => props.isSelect? \"#747475\": \"#747475\"};\r\n        color: ${props => props.isSelect? \"#DFDFE0\": \"#DFDFE0\"};\r\n        transform: translate3d(-2px, 2px, 200px);\r\n    }\r\n`\r\n\r\nconst StyledMiddleSelectButton = styled.button<StyledButtonProps>`\r\n    align-items: center;\r\n    font-family: Futura;\r\n    outline:none;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding-top: 16px;\r\n    padding-bottom: 16px;\r\n    border: 0px solid #F0B90B;\r\n    border-left: 0px solid #F0B90B;\r\n    border-right: 0px solid #F0B90B;\r\n    background-color: #262729;\r\n    color: ${props => !props.isSelect ? \"#747475\" : \"#FFF\"};\r\n    width: 60%;\r\n    transition: all 0.3s;\r\n    font-size: 16px;\r\n    pointer-events: ${props => !props.isSelect ? undefined : 'none'};\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: ${props => props.isSelect? \"#747475\": \"#747475\"};\r\n        color: ${props => props.isSelect? \"#DFDFE0\": \"#DFDFE0\"};\r\n        transform: translate3d(-2px, 2px, 200px);\r\n    }\r\n`\r\n\r\nconst StyledRightSelectButton = styled.button<StyledButtonProps>`\r\n    align-items: center;\r\n    font-family: Futura;\r\n    outline:none;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding-top: 16px;\r\n    padding-bottom: 16px;\r\n    border: 0px solid #F0B90B;\r\n    border-left: 0px solid #F0B90B;\r\n    background-color: #262729;\r\n    color: ${props => !props.isSelect ? \"#747475\" : \"#FFF\"};\r\n    width: 60%;\r\n    transition: all 0.3s;\r\n    border-top-right-radius: 20px;\r\n    font-size: 16px;\r\n    pointer-events: ${props => !props.isSelect ? undefined : 'none'};\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: ${props => props.isSelect? \"#747475\": \"#747475\"};\r\n        color: ${props => props.isSelect? \"#DFDFE0\": \"#DFDFE0\"};\r\n        transform: translate3d(-2px, 2px, 200px);\r\n    }\r\n`\r\n\r\nexport default ActionSelect;\r\n","import { useCallback } from 'react';\r\nimport useTiTICoreContracts from './useTiTICoreContracts';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\n\r\nconst useStake = () => {\r\n    const beiCash = useTiTICoreContracts();\r\n    const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n    const handleStake = useCallback((amount: number) => {\r\n        const amountBn = parseUnits(amount.toString(), 18);\r\n        handleTransactionReceipt(beiCash.stake(amountBn), `Stake ${amount}`);\r\n    }, [beiCash, handleTransactionReceipt]);\r\n\r\n    return { onStake: handleStake };\r\n};\r\n\r\nexport default useStake;\r\n","import { useCallback } from 'react';\r\nimport useTiTICoreContracts from './useTiTICoreContracts';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useClaim = () => {\r\n    const beiCash = useTiTICoreContracts();\r\n    const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n    const handleClaim = useCallback(() => {\r\n        handleTransactionReceipt(beiCash.claim(), `Claim`);\r\n    }, [beiCash, handleTransactionReceipt]);\r\n\r\n    return { onClaim: handleClaim };\r\n};\r\n\r\nexport default useClaim;\r\n","import { useCallback } from 'react';\r\nimport useTiTICoreContracts from './useTiTICoreContracts';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useExit = () => {\r\n    const beiCash = useTiTICoreContracts();\r\n    const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n    const handleExit = useCallback(() => {\r\n        handleTransactionReceipt(beiCash.exit(), `Exit`);\r\n    }, [beiCash, handleTransactionReceipt]);\r\n\r\n    return { onExit: handleExit };\r\n};\r\n\r\nexport default useExit;\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Button from \"../../components/Button\";\r\nimport Card from \"../../components/Card\";\r\nimport CardRow from \"../../components/CardRow\";\r\nimport ActionSelect from \"../../components/ActionSelect\";\r\nimport useTiTICoreContracts from \"../../hooks/useTiTICoreContracts\";\r\nimport useStake from \"../../hooks/useStake\";\r\nimport useClaim from \"../../hooks/useClaim\";\r\nimport useExit from \"../../hooks/useExit\";\r\nimport usdcLogo from \"../../assets/img/icon/usdc.svg\";\r\nimport daiLogo from \"../../assets/img/icon/dai.svg\";\r\nimport ethLogo from \"../../assets/img/icon/eth.svg\";\r\nimport wbtcLogo from \"../../assets/img/icon/wbtc.svg\";\r\n\r\nconst LPPool: React.FC = () => {\r\n    const { bankId } = useParams();\r\n    const symbol = bankId.toUpperCase();\r\n    const [actionNum, setActionNum] = useState(0);\r\n    const handleAction = useCallback((number) => {\r\n        setActionNum(number)\r\n    }, [setActionNum])\r\n\r\n    const [lpAmountInput, setLPAmountInput] = useState<number>(0);\r\n\r\n    const lpLink = \"/\"\r\n\r\n    const [userStakeAmount, setUserStakeAmount] = useState<number>(0);\r\n    const [userStakeValue, setUserStakeValue] = useState<number>(0);\r\n    const [userUnclaimedRewards, setUserUnclaimedRewards] = useState<number>(0);\r\n    const [poolApy, setPoolApy] = useState<number>(0);\r\n    const [userLPAmount, setUserLPAmount] = useState<number>(0);\r\n    const [userReward, setUserReward] = useState<number>(0);\r\n\r\n    const beiCash = useTiTICoreContracts();\r\n\r\n    const { onStake } = useStake();\r\n    const { onClaim } = useClaim();\r\n    const { onExit } = useExit();\r\n\r\n    const fetchStats = useCallback(async () => {\r\n        let [stakedBalance, redeemableTribeRewards, userLPBal, rewardPerToken, starttime] = await Promise.all([\r\n            beiCash.getStakedBalance(),\r\n            beiCash.getRedeemableTribeRewards(),\r\n            beiCash.getUSDCBalance(),\r\n            beiCash.getRewardPerToken(),\r\n            beiCash.getStartTime()\r\n        ]);\r\n\r\n        let poolApy = rewardPerToken * 3600 * 24 * 365 / (Date.now() / 1000 - starttime) * 100\r\n        let stakeValue;\r\n        if (symbol === \"USDC\") {\r\n            stakedBalance = 10000;\r\n            stakeValue = 10000;\r\n            redeemableTribeRewards = 201.35;\r\n            poolApy = 126.83;\r\n        }\r\n        if (symbol === \"DAI\") {\r\n            stakedBalance = 10000;\r\n            stakeValue = 10000;\r\n            redeemableTribeRewards = 286.86;\r\n            userLPBal = 0;\r\n            poolApy = 153.46;\r\n        }\r\n        if (symbol === \"ETH\") {\r\n            stakedBalance = 3.24;\r\n            stakeValue = 7389.4587;\r\n            redeemableTribeRewards = 0.01;\r\n            userLPBal = 0;\r\n            poolApy = 97.31;\r\n        }\r\n        if (symbol === \"WBTC\") {\r\n            stakedBalance = 0.03;\r\n            stakeValue = 986.6473;\r\n            redeemableTribeRewards = 0.01;\r\n            userLPBal = 0;\r\n            poolApy = 134.27;\r\n        }\r\n        setUserStakeAmount(stakedBalance);\r\n        setUserUnclaimedRewards(redeemableTribeRewards);\r\n        setPoolApy(poolApy);\r\n        setUserLPAmount(userLPBal);\r\n        setUserReward(redeemableTribeRewards);\r\n        setUserStakeValue(stakeValue);\r\n    }, [beiCash, symbol]);\r\n\r\n    useEffect(() => {\r\n        if (beiCash) {\r\n            fetchStats().catch((err) => console.error(err.stack));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [beiCash?.isUnlocked, fetchStats]);\r\n\r\n    return (\r\n        <>\r\n            <StyledMain>\r\n                <StyledHeader>\r\n                    <div style={{paddingBottom: \"16px\", fontSize: \"30px\", color: \"#FFF\", fontWeight: 600}}>Stake {symbol} to Join MMF</div>\r\n                    <a style={{padding: \"30px 10px 30px\", fontSize: \"16px\", color: \"#FFF\" }} href={lpLink}>\r\n                        Learn more about Market Maker Fund\r\n                    </a>\r\n                </StyledHeader>\r\n                <Card bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"30%\">\r\n                    <TextRowWrapper>\r\n                        <div style={{fontSize: \"14px\", paddingTop: \"20px\"}}>Your Staked: </div>\r\n                        <div style={{fontSize: \"14px\", paddingTop: \"20px\"}}>{userStakeAmount.toFixed(4)} {symbol}</div>\r\n                    </TextRowWrapper>\r\n                    <TextRowWrapper>\r\n                        <div style={{fontSize: \"14px\"}}>Staked Value: </div>\r\n                        <div style={{fontSize: \"14px\"}}>{userStakeValue.toFixed(4)} USD</div>\r\n                    </TextRowWrapper>\r\n                    <TextRowWrapper>\r\n                        <div style={{fontSize: \"14px\"}}>Unclaimed Rewards: </div>\r\n                        <div style={{fontSize: \"14px\"}}>{userUnclaimedRewards.toFixed(4)} {symbol}</div>\r\n                    </TextRowWrapper>\r\n                    <TextRowWrapper>\r\n                        <div style={{fontSize: \"14px\", paddingBottom: \"20px\"}}>Variable APY: </div>\r\n                        <div style={{fontSize: \"14px\", paddingBottom: \"20px\"}}>{poolApy.toFixed(4)} %</div>\r\n                    </TextRowWrapper>\r\n                </Card>\r\n                <ActionSelect actionNum={actionNum} handleAction={handleAction}/>\r\n                {\r\n                    (actionNum === 0) ? (\r\n                            <Card bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"30%\">\r\n                                <BalanceRowWrapper>\r\n                                    <div style={{fontSize: \"14px\", color: \"#747475\"}}>BALANCE: {userLPAmount.toFixed(4)} {symbol}</div>\r\n                                    <MaxButton onClick={()=>{setLPAmountInput(userLPAmount)}}/>\r\n                                </BalanceRowWrapper>\r\n                                <CardRow marginTop=\"10px\" marginBottom=\"5px\">\r\n                                    <div style={{position: \"absolute\", top: \"10px\", left: \"20px\"}}>\r\n                                        {\r\n                                            symbol === \"USDC\" ? (\r\n                                                <img src={usdcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                            ) : (\r\n                                                symbol === \"DAI\" ? (\r\n                                                    <img src={daiLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                ) : (\r\n                                                    symbol === \"ETH\" ? (\r\n                                                        <img src={ethLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                    ) : (\r\n                                                        symbol === \"WBTC\" ? (\r\n                                                            <img src={wbtcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                        ) : (\r\n                                                            <div />\r\n                                                        )\r\n                                                    )\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <InputElement type=\"number\"\r\n                                                  value={lpAmountInput}\r\n                                                  onChange={(e)=>{setLPAmountInput(e.target.valueAsNumber)}}\r\n                                                  placeholder=\"Input Amount\"/>\r\n                                </CardRow>\r\n                                <CardRow marginTop=\"5px\" marginBottom=\"5px\">\r\n                                    <StakeButton onClick={() => {onStake(lpAmountInput)}}/>\r\n                                </CardRow>\r\n                            </Card>\r\n                        ) : (actionNum === 1) ? (\r\n                            <Card bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"30%\">\r\n                                <BalanceRowWrapper>\r\n                                    <div style={{padding: \"0px 20px 0px\"}}>\r\n                                        {\r\n                                            symbol === \"USDC\" ? (\r\n                                                <img src={usdcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                            ) : (\r\n                                                symbol === \"DAI\" ? (\r\n                                                    <img src={daiLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                ) : (\r\n                                                    symbol === \"ETH\" ? (\r\n                                                        <img src={ethLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                    ) : (\r\n                                                        symbol === \"WBTC\" ? (\r\n                                                            <img src={wbtcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                        ) : (\r\n                                                            <div />\r\n                                                        )\r\n                                                    )\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div style={{fontSize: \"20px\", color: \"#A4A4A4\"}}>{userReward.toFixed(4)} {symbol}</div>\r\n                                </BalanceRowWrapper>\r\n                                <CardRow marginTop=\"5px\" marginBottom=\"5px\">\r\n                                    <ClaimButton onClick={() => {onClaim()}}/>\r\n                                </CardRow>\r\n                            </Card>\r\n                        ) : (\r\n                        <Card bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"30%\">\r\n                            <BalanceRowWrapper>\r\n                                <div style={{fontSize: \"20px\", color: \"#FFF\"}}>Your Staked:</div>\r\n                                <div style={{fontSize: \"20px\", color: \"#A4A4A4\"}}>{userStakeAmount.toFixed(4)} {symbol}</div>\r\n                            </BalanceRowWrapper>\r\n                            <BalanceRowWrapper>\r\n                                <div style={{fontSize: \"20px\", color: \"#FFF\"}}>Your Rewards:</div>\r\n                                <div style={{fontSize: \"20px\", color: \"#A4A4A4\"}}>{userReward.toFixed(4)} {symbol}</div>\r\n                            </BalanceRowWrapper>\r\n                            <CardRow marginTop=\"5px\" marginBottom=\"5px\">\r\n                                <WithdrawButton onClick={() => {onExit()}}/>\r\n                            </CardRow>\r\n                        </Card>\r\n                    )\r\n                }\r\n            </StyledMain>\r\n        </>\r\n    );\r\n};\r\n\r\ninterface MaxButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst MaxButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"16px\" buttonPadding=\"8px\" onClick={onClick}>\r\n            MAX\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst StakeButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"22px\" buttonPadding=\"10px 20px 10px\" buttonMargin=\"30px 0px 30px\" width=\"100%\" onClick={onClick}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <div>\r\n                    Stake\r\n                </div>\r\n            </div>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst ClaimButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"22px\" buttonPadding=\"10px 20px 10px\" buttonMargin=\"30px 0px 30px\" width=\"100%\" onClick={onClick}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <div>\r\n                    Claim\r\n                </div>\r\n            </div>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst WithdrawButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"22px\" buttonPadding=\"10px 20px 10px\" buttonMargin=\"30px 0px 30px\" width=\"100%\" onClick={onClick}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                    <div>\r\n                        Withdraw All Tokens\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst BalanceRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 30px;\r\n    margin-bottom: 5px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 78%;\r\n    color: #000;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst InputElement = styled.input`\r\n    border-radius: 8px;\r\n    background-color: #000;\r\n    color: #FFF;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    height: 50px;\r\n    line-height: normal;\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n    margin-bottom: 10px;\r\n    text-align: right;\r\n    width: 100%;\r\n    appearance: none;\r\n    border: 0px solid #F0B90B;\r\n    box-sizing: border-box;\r\n    outline: transparent none 1px;\r\n    outline-offset: 4px;\r\n    transition-duration: 150ms;\r\n    transition-property: all;\r\n    transition-timing-function: ease-in-out;\r\n\r\n    @media (pointer: fine) {\r\n        &:hover {\r\n        }\r\n    }\r\n\r\n    &:focus {\r\n    }\r\n\r\n    ::-webkit-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::-moz-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    /* Settings to remove arrows from numeric input */\r\n    ::-webkit-outer-spin-button,\r\n    ::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n    [type=number] {\r\n        -moz-appearance: textfield;\r\n    }\r\n`;\r\n\r\nconst StyledMain = styled.div`\r\n    margin-top: 0px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    @media (max-width: 768px) {\r\n        width: 80%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex: 1;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n    align-items: center;\r\n    padding-top: 36px;\r\n    padding-bottom: 16px;\r\n    font-size: 36px;\r\n`\r\n\r\nconst TextRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 88%;\r\n    color: #A4A4A4;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport default LPPool;\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Page from \"../../components/Page\";\r\nimport useTiTICoreContracts from \"../../hooks/useTiTICoreContracts\";\r\nimport usdc from \"../../assets/img/icon/usdc.svg\";\r\nimport dai from \"../../assets/img/icon/dai.svg\";\r\nimport eth from \"../../assets/img/icon/eth.svg\";\r\nimport wbtc from \"../../assets/img/icon/wbtc.svg\";\r\nimport { Link } from 'react-router-dom'\r\nimport LPPool from \"../LPPool\";\r\n\r\nconst LPPools: React.FC = () => {\r\n    const [userStakeAmount, setUserStakeAmount] = useState<number>(0);\r\n    const [poolApy, setPoolApy] = useState<number>(0);\r\n    const [userReward, setUserReward] = useState<number>(0);\r\n    const { path } = useRouteMatch();\r\n    const beiCash = useTiTICoreContracts();\r\n\r\n    const fetchStats = useCallback(async () => {\r\n        const [stakedBalance, redeemableTribeRewards, rewardPerToken, starttime] = await Promise.all([\r\n            beiCash.getStakedBalance(),\r\n            beiCash.getRedeemableTribeRewards(),\r\n            beiCash.getRewardPerToken(),\r\n            beiCash.getStartTime()\r\n        ]);\r\n        let poolApy = rewardPerToken * 3600 * 24 * 365 / (Date.now() / 1000 - starttime) * 100\r\n        setUserStakeAmount(stakedBalance);\r\n        setPoolApy(poolApy);\r\n        setUserReward(redeemableTribeRewards);\r\n    }, [beiCash]);\r\n\r\n    useEffect(() => {\r\n        if (beiCash) {\r\n            fetchStats().catch((err) => console.error(err.stack));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [beiCash?.isUnlocked, fetchStats]);\r\n\r\n    return (\r\n        <Switch>\r\n            <Page>\r\n                <Route exact path={path}>\r\n                    <StyledMain>\r\n                        <StyledHeader>\r\n                            <div style={{paddingBottom: \"16px\", fontSize: \"30px\", color: \"#FFF\", fontWeight: 600}}>Total Value Locked:</div>\r\n                            <div style={{paddingBottom: \"16px\", fontSize: \"30px\", color: \"#08F3CB\", fontWeight: 600}}>$ 30,150,688.00</div>\r\n                        </StyledHeader>\r\n                        <LPCardWrapper bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"60%\">\r\n                            <ImageRowWrapper>\r\n                                <img src={usdc} alt=\"bei\" height=\"50px\" width=\"50px\" style={{paddingTop: \"10px\"}}/>\r\n                                <div style={{fontSize: \"14px\", padding: \"6px 5px 1px\"}}>\r\n                                    USDC\r\n                                </div>\r\n                            </ImageRowWrapper>\r\n                            <TextRowWrapper>\r\n                                <div style={{fontSize: \"17px\", paddingBottom: \"8px\", color: \"#FFF\", fontWeight: 600}}>Total</div>\r\n                                <div style={{fontSize: \"14px\", padding: \"4px 0px 4px\"}}>TVL: 7,150,000.00 USD</div>\r\n                                <div style={{fontSize: \"14px\"}}>APY: 126.83 %</div>\r\n                            </TextRowWrapper>\r\n                            <TextRowWrapper>\r\n                                <div style={{fontSize: \"17px\", paddingBottom: \"8px\", color: \"#FFF\", fontWeight: 600}}>You</div>\r\n                                <div style={{fontSize: \"14px\", padding: \"4px 0px 4px\"}}>Your Staked: 10,000.00 USDC</div>\r\n                                <div style={{fontSize: \"14px\"}}>Your Rewards: 201.35 USDC</div>\r\n                            </TextRowWrapper>\r\n                            <ImageRowWrapper>\r\n                                <JoinButton link=\"/mmfs/USDC\"/>\r\n                            </ImageRowWrapper>\r\n                        </LPCardWrapper>\r\n                        <LPCardWrapper bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"60%\">\r\n                            <ImageRowWrapper>\r\n                                <img src={dai} alt=\"bei\" height=\"50px\" width=\"50px\" style={{paddingTop: \"10px\"}}/>\r\n                                <div style={{fontSize: \"16px\", padding: \"6px 5px 1px\"}}>\r\n                                    DAI\r\n                                </div>\r\n                            </ImageRowWrapper>\r\n                            <TextRowWrapper>\r\n                                <div style={{fontSize: \"17px\", paddingBottom: \"8px\", color: \"#FFF\", fontWeight: 600}}>Total</div>\r\n                                <div style={{fontSize: \"14px\", padding: \"4px 0px 4px\"}}>TVL: 6,030,130.00 USD</div>\r\n                                <div style={{fontSize: \"14px\"}}>APY: 153.46 %</div>\r\n                            </TextRowWrapper>\r\n                            <TextRowWrapper>\r\n                                <div style={{fontSize: \"17px\", paddingBottom: \"8px\", color: \"#FFF\", fontWeight: 600}}>You</div>\r\n                                <div style={{fontSize: \"14px\", padding: \"4px 0px 4px\"}}>Your Staked: 10,000.00 DAI</div>\r\n                                <div style={{fontSize: \"14px\"}}>Your Rewards: 286.86 DAI</div>\r\n                            </TextRowWrapper>\r\n                            <ImageRowWrapper>\r\n                                <JoinButton link=\"/mmfs/DAI\"/>\r\n                            </ImageRowWrapper>\r\n                        </LPCardWrapper>\r\n                        <LPCardWrapper bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"60%\">\r\n                            <ImageRowWrapper>\r\n                                <img src={eth} alt=\"bei\" height=\"50px\" width=\"50px\" style={{paddingTop: \"10px\"}}/>\r\n                                <div style={{fontSize: \"14px\", padding: \"6px 5px 1px\"}}>\r\n                                    WETH\r\n                                </div>\r\n                            </ImageRowWrapper>\r\n                            <TextRowWrapper>\r\n                                <div style={{fontSize: \"17px\", paddingBottom: \"8px\", color: \"#FFF\", fontWeight: 600}}>Total</div>\r\n                                <div style={{fontSize: \"14px\", padding: \"4px 0px 4px\"}}>TVL: 10,487,688.00 USD</div>\r\n                                <div style={{fontSize: \"14px\"}}>APY: 97.31 %</div>\r\n                            </TextRowWrapper>\r\n                            <TextRowWrapper>\r\n                                <div style={{fontSize: \"17px\", paddingBottom: \"8px\", color: \"#FFF\", fontWeight: 600}}>You</div>\r\n                                <div style={{fontSize: \"14px\", padding: \"4px 0px 4px\"}}>Your Staked: 3.24 ETH</div>\r\n                                <div style={{fontSize: \"14px\"}}>Your Rewards: 0.01 ETH</div>\r\n                            </TextRowWrapper>\r\n                            <ImageRowWrapper>\r\n                                <JoinButton link=\"/mmfs/ETH\"/>\r\n                            </ImageRowWrapper>\r\n                        </LPCardWrapper>\r\n                        <LPCardWrapper bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"60%\">\r\n                            <ImageRowWrapper>\r\n                                <img src={wbtc} alt=\"bei\" height=\"50px\" width=\"50px\" style={{paddingTop: \"10px\"}}/>\r\n                                <div style={{fontSize: \"14px\", padding: \"6px 5px 1px\"}}>\r\n                                    WBTC\r\n                                </div>\r\n                            </ImageRowWrapper>\r\n                            <TextRowWrapper>\r\n                                <div style={{fontSize: \"17px\", paddingBottom: \"8px\", color: \"#FFF\", fontWeight: 600}}>Total</div>\r\n                                <div style={{fontSize: \"14px\", padding: \"4px 0px 4px\"}}>TVL: 6,482,870.00 USD</div>\r\n                                <div style={{fontSize: \"14px\"}}>APY: 134.27 %</div>\r\n                            </TextRowWrapper>\r\n                            <TextRowWrapper>\r\n                                <div style={{fontSize: \"17px\", paddingBottom: \"8px\", color: \"#FFF\", fontWeight: 600}}>You</div>\r\n                                <div style={{fontSize: \"14px\", padding: \"4px 0px 4px\"}}>Your Staked: 0.03 WBTC</div>\r\n                                <div style={{fontSize: \"14px\"}}>Your Rewards: 0.01 WBTC</div>\r\n                            </TextRowWrapper>\r\n                            <ImageRowWrapper>\r\n                                <JoinButton link=\"/mmfs/WBTC\"/>\r\n                            </ImageRowWrapper>\r\n                        </LPCardWrapper>\r\n                    </StyledMain>\r\n                </Route>\r\n                <Route path={`${path}/:bankId`}>\r\n                    <LPPool />\r\n                </Route>\r\n            </Page>\r\n        </Switch>\r\n    );\r\n};\r\n\r\ninterface MaxButtonProps {\r\n    link?: string\r\n}\r\n\r\nconst JoinButton: React.FC<MaxButtonProps> = ({link}) => {\r\n    return (\r\n        <StyledButton to={link}>\r\n            JOIN\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nconst StyledButton = styled(Link)`\r\n    color: ${props => props.theme.color.grey[900]};\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    padding: 5px 1px 5px;\r\n    margin: 0px 0px 0px;\r\n    width: 60%;\r\n    text-decoration: none;\r\n    transition: all 0.3s;\r\n    border: 0px solid #B5E3D5;\r\n    background-color: #08F3CB;\r\n    border-radius: 8px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    &:hover {\r\n        transform: scale(1.06, 1.06);\r\n    }\r\n`\r\n\r\ninterface CardWrapperProps {\r\n    bgColor: string,\r\n    shadowColor: string,\r\n    width: string\r\n}\r\n\r\nconst LPCardWrapper = styled.div<CardWrapperProps>`\r\n    margin-top: 10px;\r\n    margin-bottom: 2px;\r\n    padding: 20px 0px 20px;\r\n    display: flex;\r\n    width: ${props => props.width};\r\n    flex: 1;\r\n    align-items: center;\r\n    background-color: ${props => props.bgColor};\r\n    border-radius: 12px;\r\n    box-shadow: 0px 0px 0px 0px ${props => props.shadowColor};\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex: 1;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst StyledMain = styled.div`\r\n    margin-top: 0px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    @media (max-width: 768px) {\r\n        width: 80%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex: 1;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n    align-items: center;\r\n    padding-top: 36px;\r\n    padding-bottom: 16px;\r\n    font-size: 36px;\r\n`\r\n\r\nconst ImageRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 88%;\r\n    color: #FFF;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst TextRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: left;\r\n    width: 88%;\r\n    color: #A4A4A4;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport default LPPools;\r\n"],"sourceRoot":""}