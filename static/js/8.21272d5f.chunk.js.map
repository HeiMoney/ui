{"version":3,"sources":["components/Spacer/Spacer.tsx","components/Button/Button.tsx","components/CardRow/CardRow.tsx","assets/img/icon/usdc-titi.svg","assets/img/icon/dai-titi.svg","assets/img/icon/eth-titi.svg","assets/img/icon/btc-titi.svg","components/ActionSelect/ActionSelect.tsx","hooks/useStake.ts","hooks/useClaim.ts","hooks/useExit.ts","views/LPPool/LPPool.tsx","../../src/Path.tsx","../../src/CircularProgressbar.tsx","../../src/constants.ts","../../src/buildStyles.ts","components/Dial/Dial.tsx","views/ReOrders/ReOrders.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledButton","button","theme","color","grey","fontSize","padding","margin","width","Button","children","disabled","onClick","boxShadow","buttonColor","buttonPadding","buttonMargin","buttonSize","CardRowWrapper","marginTop","marginBottom","CardRow","module","exports","StyledMain","StyledLeftSelectButton","isSelect","undefined","StyledMiddleSelectButton","StyledRightSelectButton","ActionSelect","actionNum","handleAction","useState","isStake","setIsStake","isClaim","setIsClaim","isWithdraw","setIsWithdraw","useEffect","backgroundColor","useStake","beiCash","useTiTICoreContracts","handleTransactionReceipt","useHandleTransactionReceipt","onStake","useCallback","amount","amountBn","parseUnits","toString","stake","useClaim","onClaim","claim","useExit","onExit","exit","MaxButton","StakeButton","style","display","flexDirection","justifyContent","alignItems","ClaimButton","WithdrawButton","BalanceRowWrapper","InputElement","input","StyledHeader","TextRowWrapper","LPPool","symbol","useParams","bankId","toUpperCase","setActionNum","number","lpAmountInput","setLPAmountInput","userStakeAmount","setUserStakeAmount","userStakeValue","setUserStakeValue","userUnclaimedRewards","setUserUnclaimedRewards","poolApy","setPoolApy","userLPAmount","setUserLPAmount","userReward","setUserReward","fetchStats","a","Promise","all","getStakedBalance","getRedeemableTribeRewards","getUSDCBalance","getRewardPerToken","getStartTime","stakedBalance","redeemableTribeRewards","userLPBal","rewardPerToken","starttime","Date","now","stakeValue","catch","err","console","error","stack","isUnlocked","paddingBottom","fontWeight","href","Card","bgColor","shadowColor","paddingTop","toFixed","position","top","left","src","usdcLogo","alt","height","daiLogo","ethLogo","wbtcLogo","type","value","onChange","e","target","valueAsNumber","placeholder","Path","className","counterClockwise","dashRatio","pathRadius","strokeWidth","React.createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","React.Component","getBackgroundPadding","this","background","backgroundPadding","getPathRadius","getPathRatio","minValue","maxValue","min","max","render","circleRatio","classes","styles","text","pathRatio","root","viewBox","cx","cy","r","trail","path","x","y","defaultProps","buildStyles","strokeLinecap","textColor","textSize","pathColor","pathTransition","pathTransitionDuration","trailColor","rotationTransform","rotationTransformOrigin","removeUndefinedValues","stroke","transform","transformOrigin","transition","transitionDuration","fill","obj","keys","forEach","key","StyledDial","StyledOuter","Dial","p","LPCardWrapper","StyledBody","ImageRowWrapper","OtherRowWrapper","ReOrders","useRouteMatch","Page","exact","textAlign","usdcTiTi","daiTiTi","ethTiTi","wbtcTiTi"],"mappings":"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","file":"static/js/8.21272d5f.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n    size?: 'sm' | 'md' | 'lg' | 'ultra',\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n    const { spacing } = useContext(ThemeContext)\r\n\r\n    let s: number\r\n    switch (size) {\r\n        case 'lg':\r\n            s = spacing[6]\r\n            break\r\n        case 'sm':\r\n            s = spacing[2]\r\n            break\r\n        case 'ultra':\r\n            s = spacing[8]\r\n            break\r\n        case 'md':\r\n        default:\r\n            s = spacing[4]\r\n    }\r\n\r\n    return (\r\n        <StyledSpacer size={s} />\r\n    )\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n    size: number,\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${props => props.size}px;\r\n  width: ${props => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ButtonProps {\r\n    children?: React.ReactNode,\r\n    disabled?: boolean,\r\n    onClick?: () => void,\r\n    boxShadow?: string,\r\n    buttonColor?: string,\r\n    fontSize?: string,\r\n    buttonPadding?: string,\r\n    buttonMargin?: string,\r\n    buttonSize?: number,\r\n    width?: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n                                           children,\r\n                                           disabled,\r\n                                           onClick,\r\n                                           boxShadow,\r\n                                           buttonColor,\r\n                                           fontSize,\r\n                                           buttonPadding,\r\n                                           buttonMargin,\r\n                                           buttonSize,\r\n                                           width\r\n                                       }) => {\r\n\r\n    return (\r\n        <StyledButton\r\n            boxShadow={boxShadow}\r\n            color={buttonColor}\r\n            disabled={disabled}\r\n            fontSize={fontSize}\r\n            onClick={onClick}\r\n            padding={buttonPadding}\r\n            margin={buttonMargin}\r\n            size={buttonSize}\r\n            width={width}\r\n        >\r\n            {children}\r\n        </StyledButton>\r\n    )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n    boxShadow: string,\r\n    color: string,\r\n    disabled?: boolean,\r\n    fontSize: string,\r\n    padding: string,\r\n    margin: string,\r\n    size: number,\r\n    width: string\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n    color: ${props => props.theme.color.grey[900]};\r\n    font-weight: 500;\r\n    font-size: ${props => props.fontSize};\r\n    padding: ${props => props.padding};\r\n    margin: ${props => props.margin};\r\n    width: ${props => props.width};\r\n    text-decoration: none;\r\n    transition: all 0.3s;\r\n    border: 0px solid #B5E3D5;\r\n    background-color: #08F3CB;\r\n    border-radius: 8px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    &:hover {\r\n        transform: scale(1.06, 1.06);\r\n    }\r\n`\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface CardRowProps {\r\n    children?: React.ReactNode,\r\n    marginTop: string,\r\n    marginBottom: string\r\n}\r\n\r\nconst CardRow: React.FC<CardRowProps> = ({children,marginTop,marginBottom}) => {\r\n    return (\r\n        <CardRowWrapper marginTop={marginTop} marginBottom={marginBottom}>\r\n            {children}\r\n        </CardRowWrapper>\r\n    )\r\n}\r\n\r\ninterface CardRowWrapperProps {\r\n    marginTop: string,\r\n    marginBottom: string\r\n}\r\n\r\nconst CardRowWrapper = styled.div<CardRowWrapperProps>`\r\n    position: relative;\r\n    margin-top: ${props => props.marginTop};\r\n    margin-bottom: ${props => props.marginBottom};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 80%;\r\n    color: #000;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport default CardRow\r\n","module.exports = __webpack_public_path__ + \"static/media/usdc-titi.83110fc1.svg\";","module.exports = __webpack_public_path__ + \"static/media/dai-titi.ad94404f.svg\";","module.exports = __webpack_public_path__ + \"static/media/eth-titi.1a41ac79.svg\";","module.exports = __webpack_public_path__ + \"static/media/btc-titi.0d49bd7b.svg\";","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ActionSelectProps {\r\n    actionNum?: number,\r\n    handleAction?: (actionNum: number) => void\r\n}\r\n\r\nconst ActionSelect: React.FC<ActionSelectProps> = ({actionNum,handleAction}) => {\r\n    const [isStake, setIsStake] = useState(true);\r\n    const [isClaim, setIsClaim] = useState(false);\r\n    const [isWithdraw, setIsWithdraw] = useState(false);\r\n\r\n    useEffect(() =>\r\n        {\r\n            if (actionNum === 0) {\r\n                setIsStake(true);\r\n                setIsClaim(false);\r\n                setIsWithdraw(false);\r\n            }\r\n            if (actionNum === 1) {\r\n                setIsStake(false);\r\n                setIsClaim(true);\r\n                setIsWithdraw(false);\r\n            }\r\n            if (actionNum === 2) {\r\n                setIsStake(false);\r\n                setIsClaim(false);\r\n                setIsWithdraw(true);\r\n            }\r\n        },\r\n        [actionNum]\r\n    )\r\n\r\n    return (\r\n        <StyledMain>\r\n            <StyledLeftSelectButton isSelect={isStake} onClick={()=>{handleAction(0)}} backgroundColor=\"#F0B90B\">Stake</StyledLeftSelectButton>\r\n            <StyledMiddleSelectButton isSelect={isClaim} onClick={()=>{handleAction(1)}} backgroundColor=\"#F0B90B\">Claim</StyledMiddleSelectButton>\r\n            <StyledRightSelectButton isSelect={isWithdraw} onClick={()=>{handleAction(2)}} backgroundColor=\"#F0B90B\">Withdraw</StyledRightSelectButton>\r\n        </StyledMain>\r\n    );\r\n};\r\n\r\nconst StyledMain = styled.div`\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding: 1px;\r\n    width: 30%\r\n`\r\n\r\n\r\ninterface StyledButtonProps {\r\n    isSelect: boolean,\r\n    backgroundColor: string;\r\n}\r\n\r\nconst StyledLeftSelectButton = styled.button<StyledButtonProps>`\r\n    align-items: center;\r\n    font-family: Futura;\r\n    outline:none;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding-top: 16px;\r\n    padding-bottom: 16px;\r\n    border: 0px solid #F0B90B;\r\n    border-right: 0px solid #F0B90B;\r\n    background-color: #262729;\r\n    color: ${props => !props.isSelect ? \"#747475\" : \"#FFF\"};\r\n    width: 60%;\r\n    transition: all 0.3s;\r\n    border-top-left-radius: 20px;\r\n    font-size: 16px;\r\n    pointer-events: ${props => !props.isSelect ? undefined : 'none'};\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: ${props => props.isSelect? \"#747475\": \"#747475\"};\r\n        color: ${props => props.isSelect? \"#DFDFE0\": \"#DFDFE0\"};\r\n        transform: translate3d(-2px, 2px, 200px);\r\n    }\r\n`\r\n\r\nconst StyledMiddleSelectButton = styled.button<StyledButtonProps>`\r\n    align-items: center;\r\n    font-family: Futura;\r\n    outline:none;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding-top: 16px;\r\n    padding-bottom: 16px;\r\n    border: 0px solid #F0B90B;\r\n    border-left: 0px solid #F0B90B;\r\n    border-right: 0px solid #F0B90B;\r\n    background-color: #262729;\r\n    color: ${props => !props.isSelect ? \"#747475\" : \"#FFF\"};\r\n    width: 60%;\r\n    transition: all 0.3s;\r\n    font-size: 16px;\r\n    pointer-events: ${props => !props.isSelect ? undefined : 'none'};\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: ${props => props.isSelect? \"#747475\": \"#747475\"};\r\n        color: ${props => props.isSelect? \"#DFDFE0\": \"#DFDFE0\"};\r\n        transform: translate3d(-2px, 2px, 200px);\r\n    }\r\n`\r\n\r\nconst StyledRightSelectButton = styled.button<StyledButtonProps>`\r\n    align-items: center;\r\n    font-family: Futura;\r\n    outline:none;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding-top: 16px;\r\n    padding-bottom: 16px;\r\n    border: 0px solid #F0B90B;\r\n    border-left: 0px solid #F0B90B;\r\n    background-color: #262729;\r\n    color: ${props => !props.isSelect ? \"#747475\" : \"#FFF\"};\r\n    width: 60%;\r\n    transition: all 0.3s;\r\n    border-top-right-radius: 20px;\r\n    font-size: 16px;\r\n    pointer-events: ${props => !props.isSelect ? undefined : 'none'};\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: ${props => props.isSelect? \"#747475\": \"#747475\"};\r\n        color: ${props => props.isSelect? \"#DFDFE0\": \"#DFDFE0\"};\r\n        transform: translate3d(-2px, 2px, 200px);\r\n    }\r\n`\r\n\r\nexport default ActionSelect;\r\n","import { useCallback } from 'react';\r\nimport useTiTICoreContracts from './useTiTICoreContracts';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\n\r\nconst useStake = () => {\r\n    const beiCash = useTiTICoreContracts();\r\n    const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n    const handleStake = useCallback((amount: number) => {\r\n        const amountBn = parseUnits(amount.toString(), 18);\r\n        handleTransactionReceipt(beiCash.stake(amountBn), `Stake ${amount}`);\r\n    }, [beiCash, handleTransactionReceipt]);\r\n\r\n    return { onStake: handleStake };\r\n};\r\n\r\nexport default useStake;\r\n","import { useCallback } from 'react';\r\nimport useTiTICoreContracts from './useTiTICoreContracts';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useClaim = () => {\r\n    const beiCash = useTiTICoreContracts();\r\n    const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n    const handleClaim = useCallback(() => {\r\n        handleTransactionReceipt(beiCash.claim(), `Claim`);\r\n    }, [beiCash, handleTransactionReceipt]);\r\n\r\n    return { onClaim: handleClaim };\r\n};\r\n\r\nexport default useClaim;\r\n","import { useCallback } from 'react';\r\nimport useTiTICoreContracts from './useTiTICoreContracts';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\n\r\nconst useExit = () => {\r\n    const beiCash = useTiTICoreContracts();\r\n    const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n    const handleExit = useCallback(() => {\r\n        handleTransactionReceipt(beiCash.exit(), `Exit`);\r\n    }, [beiCash, handleTransactionReceipt]);\r\n\r\n    return { onExit: handleExit };\r\n};\r\n\r\nexport default useExit;\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Button from \"../../components/Button\";\r\nimport Card from \"../../components/Card\";\r\nimport CardRow from \"../../components/CardRow\";\r\nimport ActionSelect from \"../../components/ActionSelect\";\r\nimport useTiTICoreContracts from \"../../hooks/useTiTICoreContracts\";\r\nimport useStake from \"../../hooks/useStake\";\r\nimport useClaim from \"../../hooks/useClaim\";\r\nimport useExit from \"../../hooks/useExit\";\r\nimport usdcLogo from \"../../assets/img/icon/usdc.svg\";\r\nimport daiLogo from \"../../assets/img/icon/dai.svg\";\r\nimport ethLogo from \"../../assets/img/icon/eth.svg\";\r\nimport wbtcLogo from \"../../assets/img/icon/wbtc.svg\";\r\n\r\nconst LPPool: React.FC = () => {\r\n    const { bankId } = useParams();\r\n    const symbol = bankId.toUpperCase();\r\n    const [actionNum, setActionNum] = useState(0);\r\n    const handleAction = useCallback((number) => {\r\n        setActionNum(number)\r\n    }, [setActionNum])\r\n\r\n    const [lpAmountInput, setLPAmountInput] = useState<number>(0);\r\n\r\n    const lpLink = \"/\"\r\n\r\n    const [userStakeAmount, setUserStakeAmount] = useState<number>(0);\r\n    const [userStakeValue, setUserStakeValue] = useState<number>(0);\r\n    const [userUnclaimedRewards, setUserUnclaimedRewards] = useState<number>(0);\r\n    const [poolApy, setPoolApy] = useState<number>(0);\r\n    const [userLPAmount, setUserLPAmount] = useState<number>(0);\r\n    const [userReward, setUserReward] = useState<number>(0);\r\n\r\n    const beiCash = useTiTICoreContracts();\r\n\r\n    const { onStake } = useStake();\r\n    const { onClaim } = useClaim();\r\n    const { onExit } = useExit();\r\n\r\n    const fetchStats = useCallback(async () => {\r\n        let [stakedBalance, redeemableTribeRewards, userLPBal, rewardPerToken, starttime] = await Promise.all([\r\n            beiCash.getStakedBalance(),\r\n            beiCash.getRedeemableTribeRewards(),\r\n            beiCash.getUSDCBalance(),\r\n            beiCash.getRewardPerToken(),\r\n            beiCash.getStartTime()\r\n        ]);\r\n\r\n        let poolApy = rewardPerToken * 3600 * 24 * 365 / (Date.now() / 1000 - starttime) * 100\r\n        let stakeValue;\r\n        if (symbol === \"USDC\") {\r\n            stakedBalance = 10000;\r\n            stakeValue = 10000;\r\n            redeemableTribeRewards = 201.35;\r\n            poolApy = 126.83;\r\n        }\r\n        if (symbol === \"DAI\") {\r\n            stakedBalance = 10000;\r\n            stakeValue = 10000;\r\n            redeemableTribeRewards = 286.86;\r\n            userLPBal = 0;\r\n            poolApy = 153.46;\r\n        }\r\n        if (symbol === \"ETH\") {\r\n            stakedBalance = 3.24;\r\n            stakeValue = 7389.4587;\r\n            redeemableTribeRewards = 0.01;\r\n            userLPBal = 0;\r\n            poolApy = 97.31;\r\n        }\r\n        if (symbol === \"WBTC\") {\r\n            stakedBalance = 0.03;\r\n            stakeValue = 986.6473;\r\n            redeemableTribeRewards = 0.01;\r\n            userLPBal = 0;\r\n            poolApy = 134.27;\r\n        }\r\n        setUserStakeAmount(stakedBalance);\r\n        setUserUnclaimedRewards(redeemableTribeRewards);\r\n        setPoolApy(poolApy);\r\n        setUserLPAmount(userLPBal);\r\n        setUserReward(redeemableTribeRewards);\r\n        setUserStakeValue(stakeValue);\r\n    }, [beiCash, symbol]);\r\n\r\n    useEffect(() => {\r\n        if (beiCash) {\r\n            fetchStats().catch((err) => console.error(err.stack));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [beiCash?.isUnlocked, fetchStats]);\r\n\r\n    return (\r\n        <>\r\n            <StyledMain>\r\n                <StyledHeader>\r\n                    <div style={{paddingBottom: \"16px\", fontSize: \"30px\", color: \"#FFF\", fontWeight: 600}}>Stake {symbol} to Join MMF</div>\r\n                    <a style={{padding: \"30px 10px 30px\", fontSize: \"16px\", color: \"#FFF\" }} href={lpLink}>\r\n                        Learn more about Market Maker Fund\r\n                    </a>\r\n                </StyledHeader>\r\n                <Card bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"30%\">\r\n                    <TextRowWrapper>\r\n                        <div style={{fontSize: \"14px\", paddingTop: \"20px\"}}>Your Staked: </div>\r\n                        <div style={{fontSize: \"14px\", paddingTop: \"20px\"}}>{userStakeAmount.toFixed(4)} {symbol}</div>\r\n                    </TextRowWrapper>\r\n                    <TextRowWrapper>\r\n                        <div style={{fontSize: \"14px\"}}>Staked Value: </div>\r\n                        <div style={{fontSize: \"14px\"}}>{userStakeValue.toFixed(4)} USD</div>\r\n                    </TextRowWrapper>\r\n                    <TextRowWrapper>\r\n                        <div style={{fontSize: \"14px\"}}>Unclaimed Rewards: </div>\r\n                        <div style={{fontSize: \"14px\"}}>{userUnclaimedRewards.toFixed(4)} {symbol}</div>\r\n                    </TextRowWrapper>\r\n                    <TextRowWrapper>\r\n                        <div style={{fontSize: \"14px\", paddingBottom: \"20px\"}}>Variable APY: </div>\r\n                        <div style={{fontSize: \"14px\", paddingBottom: \"20px\"}}>{poolApy.toFixed(4)} %</div>\r\n                    </TextRowWrapper>\r\n                </Card>\r\n                <ActionSelect actionNum={actionNum} handleAction={handleAction}/>\r\n                {\r\n                    (actionNum === 0) ? (\r\n                            <Card bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"30%\">\r\n                                <BalanceRowWrapper>\r\n                                    <div style={{fontSize: \"14px\", color: \"#747475\"}}>BALANCE: {userLPAmount.toFixed(4)} {symbol}</div>\r\n                                    <MaxButton onClick={()=>{setLPAmountInput(userLPAmount)}}/>\r\n                                </BalanceRowWrapper>\r\n                                <CardRow marginTop=\"10px\" marginBottom=\"5px\">\r\n                                    <div style={{position: \"absolute\", top: \"10px\", left: \"20px\"}}>\r\n                                        {\r\n                                            symbol === \"USDC\" ? (\r\n                                                <img src={usdcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                            ) : (\r\n                                                symbol === \"DAI\" ? (\r\n                                                    <img src={daiLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                ) : (\r\n                                                    symbol === \"ETH\" ? (\r\n                                                        <img src={ethLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                    ) : (\r\n                                                        symbol === \"WBTC\" ? (\r\n                                                            <img src={wbtcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                        ) : (\r\n                                                            <div />\r\n                                                        )\r\n                                                    )\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <InputElement type=\"number\"\r\n                                                  value={lpAmountInput}\r\n                                                  onChange={(e)=>{setLPAmountInput(e.target.valueAsNumber)}}\r\n                                                  placeholder=\"Input Amount\"/>\r\n                                </CardRow>\r\n                                <CardRow marginTop=\"5px\" marginBottom=\"5px\">\r\n                                    <StakeButton onClick={() => {onStake(lpAmountInput)}}/>\r\n                                </CardRow>\r\n                            </Card>\r\n                        ) : (actionNum === 1) ? (\r\n                            <Card bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"30%\">\r\n                                <BalanceRowWrapper>\r\n                                    <div style={{padding: \"0px 20px 0px\"}}>\r\n                                        {\r\n                                            symbol === \"USDC\" ? (\r\n                                                <img src={usdcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                            ) : (\r\n                                                symbol === \"DAI\" ? (\r\n                                                    <img src={daiLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                ) : (\r\n                                                    symbol === \"ETH\" ? (\r\n                                                        <img src={ethLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                    ) : (\r\n                                                        symbol === \"WBTC\" ? (\r\n                                                            <img src={wbtcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                                        ) : (\r\n                                                            <div />\r\n                                                        )\r\n                                                    )\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div style={{fontSize: \"20px\", color: \"#A4A4A4\"}}>{userReward.toFixed(4)} {symbol}</div>\r\n                                </BalanceRowWrapper>\r\n                                <CardRow marginTop=\"5px\" marginBottom=\"5px\">\r\n                                    <ClaimButton onClick={() => {onClaim()}}/>\r\n                                </CardRow>\r\n                            </Card>\r\n                        ) : (\r\n                        <Card bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"30%\">\r\n                            <BalanceRowWrapper>\r\n                                <div style={{fontSize: \"20px\", color: \"#FFF\"}}>Your Staked:</div>\r\n                                <div style={{fontSize: \"20px\", color: \"#A4A4A4\"}}>{userStakeAmount.toFixed(4)} {symbol}</div>\r\n                            </BalanceRowWrapper>\r\n                            <BalanceRowWrapper>\r\n                                <div style={{fontSize: \"20px\", color: \"#FFF\"}}>Your Rewards:</div>\r\n                                <div style={{fontSize: \"20px\", color: \"#A4A4A4\"}}>{userReward.toFixed(4)} {symbol}</div>\r\n                            </BalanceRowWrapper>\r\n                            <CardRow marginTop=\"5px\" marginBottom=\"5px\">\r\n                                <WithdrawButton onClick={() => {onExit()}}/>\r\n                            </CardRow>\r\n                        </Card>\r\n                    )\r\n                }\r\n            </StyledMain>\r\n        </>\r\n    );\r\n};\r\n\r\ninterface MaxButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst MaxButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"16px\" buttonPadding=\"8px\" onClick={onClick}>\r\n            MAX\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst StakeButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"22px\" buttonPadding=\"10px 20px 10px\" buttonMargin=\"30px 0px 30px\" width=\"100%\" onClick={onClick}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <div>\r\n                    Stake\r\n                </div>\r\n            </div>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst ClaimButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"22px\" buttonPadding=\"10px 20px 10px\" buttonMargin=\"30px 0px 30px\" width=\"100%\" onClick={onClick}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <div>\r\n                    Claim\r\n                </div>\r\n            </div>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst WithdrawButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"22px\" buttonPadding=\"10px 20px 10px\" buttonMargin=\"30px 0px 30px\" width=\"100%\" onClick={onClick}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                    <div>\r\n                        Withdraw All Tokens\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst BalanceRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 30px;\r\n    margin-bottom: 5px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 78%;\r\n    color: #000;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst InputElement = styled.input`\r\n    border-radius: 8px;\r\n    background-color: #000;\r\n    color: #FFF;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    height: 50px;\r\n    line-height: normal;\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n    margin-bottom: 10px;\r\n    text-align: right;\r\n    width: 100%;\r\n    appearance: none;\r\n    border: 0px solid #F0B90B;\r\n    box-sizing: border-box;\r\n    outline: transparent none 1px;\r\n    outline-offset: 4px;\r\n    transition-duration: 150ms;\r\n    transition-property: all;\r\n    transition-timing-function: ease-in-out;\r\n\r\n    @media (pointer: fine) {\r\n        &:hover {\r\n        }\r\n    }\r\n\r\n    &:focus {\r\n    }\r\n\r\n    ::-webkit-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::-moz-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    /* Settings to remove arrows from numeric input */\r\n    ::-webkit-outer-spin-button,\r\n    ::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n    [type=number] {\r\n        -moz-appearance: textfield;\r\n    }\r\n`;\r\n\r\nconst StyledMain = styled.div`\r\n    margin-top: 0px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    @media (max-width: 768px) {\r\n        width: 80%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex: 1;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n    align-items: center;\r\n    padding-top: 36px;\r\n    padding-bottom: 16px;\r\n    font-size: 36px;\r\n`\r\n\r\nconst TextRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 88%;\r\n    color: #A4A4A4;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport default LPPool;\r\n","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import { CircularProgressbarStyles } from './types';\n\nexport default function buildStyles({\n  rotation,\n  strokeLinecap,\n  textColor,\n  textSize,\n  pathColor,\n  pathTransition,\n  pathTransitionDuration,\n  trailColor,\n  backgroundColor,\n}: {\n  rotation?: number; // Number of turns, 0-1\n  strokeLinecap?: any;\n  textColor?: string;\n  textSize?: string | number;\n  pathColor?: string;\n  pathTransition?: string;\n  pathTransitionDuration?: number; // Measured in seconds\n  trailColor?: string;\n  backgroundColor?: string;\n}): CircularProgressbarStyles {\n  const rotationTransform = rotation == null ? undefined : `rotate(${rotation}turn)`;\n  const rotationTransformOrigin = rotation == null ? undefined : 'center center';\n\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : `${pathTransitionDuration}s`,\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize,\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor,\n    }),\n  };\n}\n\nfunction removeUndefinedValues(obj: { [key: string]: any }) {\n  Object.keys(obj).forEach((key: string) => {\n    if (obj[key] == null) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}\n","import React  from 'react'\r\nimport styled  from 'styled-components'\r\n\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar'\r\n\r\ninterface DialProps {\r\n    children?: React.ReactNode,\r\n    disabled?: boolean,\r\n    size?: number,\r\n    value: number\r\n}\r\n\r\nconst Dial: React.FC<DialProps> = ({ children, disabled, size = 256, value }) => {\r\n\r\n    return (\r\n        <StyledDial size={100}>\r\n            <StyledOuter>\r\n                <CircularProgressbar\r\n                    value={value}\r\n                    strokeWidth={20}\r\n                    styles={buildStyles({\r\n                        strokeLinecap: 'round',\r\n                        pathColor: \"#8572EB\",\r\n                        pathTransitionDuration: 1,\r\n                        trailColor: '#77E7D5',\r\n                        backgroundColor: '#262729'\r\n                    })}\r\n                />\r\n            </StyledOuter>\r\n        </StyledDial>\r\n    )\r\n}\r\n\r\ninterface StyledInnerProps {\r\n    size: number\r\n}\r\n\r\nconst StyledDial = styled.div<StyledInnerProps>`\r\n  padding: 24px;\r\n  position: relative;\r\n  height: ${props => props.size}px;\r\n  width: ${props => props.size}px;\r\n`\r\n\r\nconst StyledOuter = styled.div`\r\n  border-radius: 10000px;\r\n  position: absolute;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n`\r\n\r\nexport default Dial\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Page from \"../../components/Page\";\r\nimport useTiTICoreContracts from \"../../hooks/useTiTICoreContracts\";\r\n\r\nimport Dial from \"../../components/Dial\";\r\nimport LPPool from \"../LPPool\";\r\nimport Spacer from \"../../components/Spacer\";\r\n\r\nimport usdcTiTi from \"../../assets/img/icon/usdc-titi.svg\";\r\nimport daiTiTi from \"../../assets/img/icon/dai-titi.svg\";\r\nimport ethTiTi from \"../../assets/img/icon/eth-titi.svg\"\r\nimport wbtcTiTi from \"../../assets/img/icon/btc-titi.svg\";\r\n//import Countdown from 'react-countdown';\r\n\r\nconst ReOrders: React.FC = () => {\r\n    const [userStakeAmount, setUserStakeAmount] = useState<number>(0);\r\n    const [poolApy, setPoolApy] = useState<number>(0);\r\n    const [userReward, setUserReward] = useState<number>(0);\r\n    const { path } = useRouteMatch();\r\n    const beiCash = useTiTICoreContracts();\r\n\r\n    const fetchStats = useCallback(async () => {\r\n        const [stakedBalance, redeemableTribeRewards, , rewardPerToken, starttime] = await Promise.all([\r\n            beiCash.getStakedBalance(),\r\n            beiCash.getRedeemableTribeRewards(),\r\n            beiCash.getUSDCBalance(),\r\n            beiCash.getRewardPerToken(),\r\n            beiCash.getStartTime()\r\n        ]);\r\n\r\n        let poolApy = rewardPerToken * 3600 * 24 * 365 / (Date.now() / 1000 - starttime) * 100\r\n        setUserStakeAmount(stakedBalance);\r\n        setPoolApy(poolApy);\r\n        setUserReward(redeemableTribeRewards);\r\n\r\n    }, [beiCash]);\r\n\r\n    useEffect(() => {\r\n        if (beiCash) {\r\n            fetchStats().catch((err) => console.error(err.stack));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [beiCash?.isUnlocked, fetchStats]);\r\n\r\n    return (\r\n        <Switch>\r\n            <Page>\r\n                <Route exact path={path}>\r\n                    <StyledMain>\r\n                        <StyledHeader>\r\n                            <div style={{paddingBottom: \"16px\", fontSize: \"30px\", color: \"#FFF\", fontWeight: 600}}>Peg Price: $1.000</div>\r\n                        </StyledHeader>\r\n                        <StyledBody>\r\n                            <LPCardWrapper bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"60%\">\r\n                                <ImageRowWrapper>\r\n                                    <div style={{fontSize: \"16px\", fontWeight: 600}}>\r\n                                        Fixed Time Interval\r\n                                    </div>\r\n                                </ImageRowWrapper>\r\n                                <TextRowWrapper>\r\n                                    <div style={{fontSize: \"14px\", padding: \"20px 20px\", textAlign: \"center\"}}>\r\n                                        TiTi will trigger ReOrders at a fixed time, the time period is 30min.\r\n                                    </div>\r\n                                </TextRowWrapper>\r\n                                <OtherRowWrapper>\r\n                                    <div style={{fontSize: \"16px\", padding: \"15px 0px 20px\", color: \"#A4A4A4\", fontWeight: 600}}>Remain Time: 21 min</div>\r\n                                    <Dial value={30} />\r\n                                </OtherRowWrapper>\r\n                            </LPCardWrapper>\r\n                            <Spacer />\r\n                            <LPCardWrapper bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"60%\">\r\n                                <ImageRowWrapper>\r\n                                    <div style={{fontSize: \"16px\", fontWeight: 600}}>\r\n                                        Fixed Price Spread\r\n                                    </div>\r\n                                </ImageRowWrapper>\r\n                                <TextRowWrapper>\r\n                                    <div style={{fontSize: \"14px\", padding: \"20px 20px\", textAlign: \"center\"}}>\r\n                                        TiTi will trigger ReOrders at a fixed price spread, the price spread is 5%.\r\n                                    </div>\r\n                                </TextRowWrapper>\r\n                                <OtherRowWrapper>\r\n                                    <div style={{backgroundColor: \"#1A1B1D\", height: \"1px\", width: \"100%\"}} />\r\n                                    <BalanceRowWrapper>\r\n                                        <div style={{padding: \"0px 0px 0px\"}}>\r\n                                            <img src={usdcTiTi} alt=\"bnbLogo\" height=\"30px\"/>\r\n                                        </div>\r\n                                        <div style={{fontSize: \"16px\", color: \"#FFF\"}}>$ 0.998</div>\r\n                                    </BalanceRowWrapper>\r\n                                    <div style={{backgroundColor: \"#1A1B1D\", height: \"1px\", width: \"100%\"}} />\r\n                                    <BalanceRowWrapper>\r\n                                        <div style={{padding: \"0px 0px 0px\"}}>\r\n                                            <img src={daiTiTi} alt=\"bnbLogo\" height=\"30px\"/>\r\n                                        </div>\r\n                                        <div style={{fontSize: \"16px\", color: \"#FFF\"}}>$ 1.034</div>\r\n                                    </BalanceRowWrapper>\r\n                                    <div style={{backgroundColor: \"#1A1B1D\", height: \"1px\", width: \"100%\"}} />\r\n                                    <BalanceRowWrapper>\r\n                                        <div style={{padding: \"0px 0px 0px\"}}>\r\n                                            <img src={ethTiTi} alt=\"bnbLogo\" height=\"30px\"/>\r\n                                        </div>\r\n                                        <div style={{fontSize: \"16px\", color: \"#FFF\"}}>$ 0.983</div>\r\n                                    </BalanceRowWrapper>\r\n                                    <div style={{backgroundColor: \"#1A1B1D\", height: \"1px\", width: \"100%\"}} />\r\n                                    <BalanceRowWrapper>\r\n                                        <div style={{padding: \"0px 0px 0px\"}}>\r\n                                            <img src={wbtcTiTi} alt=\"bnbLogo\" height=\"30px\"/>\r\n                                        </div>\r\n                                        <div style={{fontSize: \"16px\", color: \"#FFF\"}}>$ 1.017</div>\r\n                                    </BalanceRowWrapper>\r\n                                    <div style={{backgroundColor: \"#1A1B1D\", height: \"1px\", width: \"100%\"}} />\r\n                                </OtherRowWrapper>\r\n                            </LPCardWrapper>\r\n                            <Spacer />\r\n                            <LPCardWrapper bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"60%\">\r\n                                <ImageRowWrapper>\r\n                                    <div style={{fontSize: \"16px\", fontWeight: 600}}>\r\n                                        MMF Updates\r\n                                    </div>\r\n                                </ImageRowWrapper>\r\n                                <TextRowWrapper>\r\n                                    <div style={{fontSize: \"14px\", padding: \"20px 20px\", textAlign: \"center\"}}>\r\n                                        TiTi will trigger ReOrders when Market Maker Fund updates.\r\n                                    </div>\r\n                                </TextRowWrapper>\r\n                                <OtherRowWrapper>\r\n                                    <div style={{fontSize: \"16px\", padding: \"15px 0px 20px\", color: \"#A4A4A4\", fontWeight: 600}}>Last Update Time:</div>\r\n                                    <div style={{fontSize: \"16px\", padding: \"60px 0px 30px\", color: \"#FFF\", fontWeight: 600}}>17:00:00 2021Y06M17D</div>\r\n                                </OtherRowWrapper>\r\n                            </LPCardWrapper>\r\n                        </StyledBody>\r\n                    </StyledMain>\r\n                </Route>\r\n                <Route path={`${path}/:bankId`}>\r\n                    <LPPool />\r\n                </Route>\r\n            </Page>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nconst StyledCountdownWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledCountdownTitle = styled.p`\r\n  font-size: 20px;\r\n  color: ${(props) => props.theme.color.grey[100]};\r\n  margin: 0;\r\n`;\r\n\r\nconst BalanceRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 13px;\r\n    margin-bottom: 13px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 78%;\r\n    color: #000;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\ninterface CardWrapperProps {\r\n    bgColor: string,\r\n    shadowColor: string,\r\n    width: string\r\n}\r\n\r\nconst LPCardWrapper = styled.div<CardWrapperProps>`\r\n    margin-top: 10px;\r\n    margin-bottom: 2px;\r\n    padding: 20px 0px 20px;\r\n    display: flex;\r\n    width: ${props => props.width};\r\n    flex: 1;\r\n    height: 350px;\r\n    align-items: center;\r\n    background-color: ${props => props.bgColor};\r\n    border-radius: 12px;\r\n    box-shadow: 0px 0px 0px 0px ${props => props.shadowColor};\r\n    flex-direction: column;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex: 1;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst StyledMain = styled.div`\r\n    margin-top: 0px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    align-items: center;\r\n    text-align: center;\r\n    flex-direction: column;\r\n    @media (max-width: 768px) {\r\n        width: 80%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex: 1;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n    align-items: center;\r\n    padding-top: 36px;\r\n    padding-bottom: 16px;\r\n    font-size: 36px;\r\n`\r\n\r\nconst StyledBody = styled.div`\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 60%;\r\n`\r\n\r\nconst ImageRowWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 88%;\r\n    color: #FFF;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst TextRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: left;\r\n    background-color: #1A1B1D;\r\n    width: 100%;\r\n    color: #A4A4A4;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst OtherRowWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 0px;\r\n    margin-bottom: 10px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 100%;\r\n    color: #A4A4A4;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport default ReOrders;\r\n"],"sourceRoot":""}