{"version":3,"sources":["assets/img/icon/whiteLogo.svg","components/Button/Button.tsx","components/CardRow/CardRow.tsx","assets/img/icon/usdc-titi.svg","assets/img/icon/dai-titi.svg","assets/img/icon/eth-titi.svg","assets/img/icon/btc-titi.svg","assets/img/icon/swap.svg","views/Exchange/components/ModeSelect.tsx","components/HalfCard/HalfCard.tsx","configs/shared.js","configs/index.js","configs/development.js","configs/staging.js","configs/production.js","titi-core-contracts/calculations.js","hooks/useBuy.tsx","views/Exchange/components/BuyCard.tsx","hooks/useSell.tsx","views/Exchange/components/SellCard.tsx","views/Exchange/Exchange.tsx"],"names":["module","exports","StyledButton","styled","button","props","theme","color","grey","fontSize","padding","margin","width","Button","children","disabled","onClick","boxShadow","buttonColor","buttonPadding","buttonMargin","buttonSize","size","CardRowWrapper","div","marginTop","marginBottom","CardRow","StyledMain","StyledTokenButton","a","isSelect","undefined","ModeSelect","symbol","handleTokenSelect","useState","isUSDT","setIsUSDT","isDAI","setIsDAI","isETH","setIsETH","isWBTC","setIsWBTC","useEffect","src","usdc","alt","height","style","dai","eth","wbtc","CardWrapper","bgColor","HalfCard","shadowColor","sharedConfig","links","discord","telegram","twitter","github","medium","defaultSlippageParam","exchangeTransactionDeadlineMinutes","dedicatedWalletConnectBridgeUrl","config","development","network","postGenesis","jsonMode","comingSoonMode","analyticsPageEnabled","amplitudeKey","feiTribeUniswapLpLink","staging","production","feiEthUniswapAnalyticsUrl","feiTribeUniswapAnalyticsUrl","feiTribeUniswapTradingUrl","process","REACT_APP_ENV","mergedConfig","shared","getAmountOut","inputValue","exchangeDirection","feiReservesBN","ethReservesBN","includeUniswapFee","inputAmountAfterUniswapFeeBN","BigNumber","times","reserveOutBN","reserveInBN","amountOutNumeratorBN","amountOutDenominatorBN","plus","amountOutBN","dividedBy","amountOut","toString","amountOutMin","useBuy","beiCash","useTiTICoreContracts","handleTransactionReceipt","useHandleTransactionReceipt","onBuy","useCallback","amount","amountBn","parseUnits","buy","MaxButton","SwapButton","StyledSwapButton","swap","BuyButton","display","flexDirection","justifyContent","alignItems","BalanceRowWrapper","TextRowWrapper","InputElement","input","OutputElement","BuyCard","userBNBBalance","userBEIBalance","bnbReserve","beiReserve","timeWeight","pegPrice","bnbPrice","isBuy","tokenSymbol","bnbAmountInput","setBNBAmountInput","beiAmountOutput","setBEIAmountOutput","userInputUSD","setUserInputUSD","slippage","setSlippage","buyInfo","Number","position","top","left","usdcLogo","daiLogo","ethLogo","wbtcLogo","type","value","Math","floor","onChange","e","target","valueAsNumber","placeholder","bei","toFixed","useSell","onSell","sell","SellButton","SellCard","beiAmountInput","setBEIAmountInput","bnbAmountOutput","setBNBAmountOutput","sellInfo","StyledHeader","StyledHeaderPrice","StyledPrice","Exchange","setIsBuy","handleIsBuy","userTokenSymbol","setUserTokenSymbol","setUserBNBBalance","setUserBEIBalance","setBNBReserve","setBEIReserve","setTimeWeight","setPegPrice","setBNBPrice","fetchStats","Promise","all","getTITIBalance","getUSDCBalance","getTITIUSDCReserves","getPegPrice","reserves","catch","err","console","error","stack","isUnlocked","Page","usdcTiTi","daiTiTi","ethTiTi","wbtcTiTi"],"mappings":"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","file":"static/js/9.f22d9146.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whiteLogo.c6e0632c.svg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ButtonProps {\r\n    children?: React.ReactNode,\r\n    disabled?: boolean,\r\n    onClick?: () => void,\r\n    boxShadow?: string,\r\n    buttonColor?: string,\r\n    fontSize?: string,\r\n    buttonPadding?: string,\r\n    buttonMargin?: string,\r\n    buttonSize?: number,\r\n    width?: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n                                           children,\r\n                                           disabled,\r\n                                           onClick,\r\n                                           boxShadow,\r\n                                           buttonColor,\r\n                                           fontSize,\r\n                                           buttonPadding,\r\n                                           buttonMargin,\r\n                                           buttonSize,\r\n                                           width\r\n                                       }) => {\r\n\r\n    return (\r\n        <StyledButton\r\n            boxShadow={boxShadow}\r\n            color={buttonColor}\r\n            disabled={disabled}\r\n            fontSize={fontSize}\r\n            onClick={onClick}\r\n            padding={buttonPadding}\r\n            margin={buttonMargin}\r\n            size={buttonSize}\r\n            width={width}\r\n        >\r\n            {children}\r\n        </StyledButton>\r\n    )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n    boxShadow: string,\r\n    color: string,\r\n    disabled?: boolean,\r\n    fontSize: string,\r\n    padding: string,\r\n    margin: string,\r\n    size: number,\r\n    width: string\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n    color: ${props => props.theme.color.grey[900]};\r\n    font-weight: 500;\r\n    font-size: ${props => props.fontSize};\r\n    padding: ${props => props.padding};\r\n    margin: ${props => props.margin};\r\n    width: ${props => props.width};\r\n    text-decoration: none;\r\n    transition: all 0.3s;\r\n    border: 0px solid #B5E3D5;\r\n    background-color: #08F3CB;\r\n    border-radius: 8px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    &:hover {\r\n        transform: scale(1.06, 1.06);\r\n    }\r\n`\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface CardRowProps {\r\n    children?: React.ReactNode,\r\n    marginTop: string,\r\n    marginBottom: string\r\n}\r\n\r\nconst CardRow: React.FC<CardRowProps> = ({children,marginTop,marginBottom}) => {\r\n    return (\r\n        <CardRowWrapper marginTop={marginTop} marginBottom={marginBottom}>\r\n            {children}\r\n        </CardRowWrapper>\r\n    )\r\n}\r\n\r\ninterface CardRowWrapperProps {\r\n    marginTop: string,\r\n    marginBottom: string\r\n}\r\n\r\nconst CardRowWrapper = styled.div<CardRowWrapperProps>`\r\n    position: relative;\r\n    margin-top: ${props => props.marginTop};\r\n    margin-bottom: ${props => props.marginBottom};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 80%;\r\n    color: #000;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport default CardRow\r\n","module.exports = __webpack_public_path__ + \"static/media/usdc-titi.83110fc1.svg\";","module.exports = __webpack_public_path__ + \"static/media/dai-titi.ad94404f.svg\";","module.exports = __webpack_public_path__ + \"static/media/eth-titi.1a41ac79.svg\";","module.exports = __webpack_public_path__ + \"static/media/btc-titi.0d49bd7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/swap.be71fdee.svg\";","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport usdc from \"../../../assets/img/icon/usdc.svg\";\r\nimport dai from \"../../../assets/img/icon/dai.svg\";\r\nimport eth from \"../../../assets/img/icon/eth.svg\";\r\nimport wbtc from \"../../../assets/img/icon/wbtc.svg\";\r\n\r\n\r\ninterface ModeSelectProps {\r\n    symbol?: string,\r\n    handleTokenSelect?: (symbol: string) => void\r\n}\r\n\r\nconst ModeSelect: React.FC<ModeSelectProps> = ({symbol, handleTokenSelect}) => {\r\n    const [isUSDT, setIsUSDT] = useState<boolean>(true);\r\n    const [isDAI, setIsDAI] = useState<boolean>(false);\r\n    const [isETH, setIsETH] = useState<boolean>(false);\r\n    const [isWBTC, setIsWBTC] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        setIsUSDT(symbol === \"USDC\")\r\n        setIsDAI(symbol === \"DAI\")\r\n        setIsETH(symbol === \"ETH\")\r\n        setIsWBTC(symbol === \"WBTC\")\r\n    }, [symbol, handleTokenSelect]);\r\n\r\n    return (\r\n        <StyledMain>\r\n            <StyledTokenButton isSelect={isUSDT} onClick={()=>{handleTokenSelect(\"USDC\")}}>\r\n                <img src={usdc} alt=\"bei\" height=\"60px\" width=\"50px\"/>\r\n                <div style={{fontSize: \"14px\", padding: \"10px 5px 1px\"}}>\r\n                    USDC\r\n                </div>\r\n            </StyledTokenButton>\r\n            <StyledTokenButton isSelect={isDAI} onClick={()=>{handleTokenSelect(\"DAI\")}}>\r\n                <img src={dai} alt=\"bei\" height=\"60px\" width=\"50px\"/>\r\n                <div style={{fontSize: \"14px\", padding: \"10px 5px 1px\"}}>\r\n                    DAI\r\n                </div>\r\n            </StyledTokenButton>\r\n            <StyledTokenButton isSelect={isETH} onClick={()=>{handleTokenSelect(\"ETH\")}}>\r\n                <img src={eth} alt=\"bei\" height=\"60px\" width=\"50px\"/>\r\n                <div style={{fontSize: \"14px\", padding: \"10px 5px 1px\"}}>\r\n                    WETH\r\n                </div>\r\n            </StyledTokenButton>\r\n            <StyledTokenButton isSelect={isWBTC} onClick={()=>{handleTokenSelect(\"WBTC\")}}>\r\n                <img src={wbtc} alt=\"bei\" height=\"60px\" width=\"50px\"/>\r\n                <div style={{fontSize: \"14px\", padding: \"10px 5px 1px\"}}>\r\n                    WBTC\r\n                </div>\r\n            </StyledTokenButton>\r\n        </StyledMain>\r\n    );\r\n};\r\n\r\nconst StyledMain = styled.div`\r\n    margin-top: 20px;\r\n    margin-bottom: 10px;\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding: 10px;\r\n    background-color: #262729;\r\n    width: 30%;\r\n    border-radius: 8px;\r\n`\r\n\r\ninterface StyledButtonProps {\r\n    isSelect: boolean\r\n}\r\n\r\nconst StyledTokenButton = styled.a<StyledButtonProps>`\r\n    align-items: center;\r\n    outline:none;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    padding-top: 16px;\r\n    padding-bottom: 5px;\r\n    color: ${props => props.isSelect? \"#08F3CB\": \"#FFF\"};\r\n    width: 60%;\r\n    transition: all 0.3s;\r\n    font-size: 25px;\r\n    flex-direction: column;\r\n    pointer-events: ${props => !props.isSelect ? undefined : 'none'};\r\n    cursor: pointer;\r\n    &:hover {\r\n        transform: scale(1.06, 1.06);\r\n    }\r\n`\r\n\r\nexport default ModeSelect;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ButtonProps {\r\n    children?: React.ReactNode,\r\n    bgColor: string,\r\n    shadowColor: string,\r\n    width: string\r\n\r\n}\r\n\r\nconst HalfCard: React.FC<ButtonProps> = ({children,bgColor,shadowColor,width}) => {\r\n\r\n    return (\r\n        <CardWrapper\r\n            bgColor={bgColor}\r\n            shadowColor={shadowColor}\r\n            width={width}\r\n        >\r\n            {children}\r\n        </CardWrapper>\r\n    )\r\n}\r\n\r\ninterface CardWrapperProps {\r\n    bgColor: string,\r\n    shadowColor: string,\r\n    width: string\r\n}\r\n\r\nconst CardWrapper = styled.div<CardWrapperProps>`\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    width: ${props => props.width};\r\n    flex: 1;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: ${props => props.bgColor};\r\n    border-radius: 15px;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex: 1;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport default HalfCard\r\n","const sharedConfig = {\r\n    links: {\r\n        discord: \"https://discord.gg/2prhYdQ5jP\",\r\n        telegram: \"https://t.me/feiprotocol\",\r\n        twitter: \"https://twitter.com/feiprotocol\",\r\n        github: \"https://github.com/fei-protocol/fei-protocol-core\",\r\n        medium: \"https://medium.com/fei-protocol/introducing-fei-protocol-2db79bd7a82b\",\r\n    },\r\n    defaultSlippageParam: 0.005,\r\n    exchangeTransactionDeadlineMinutes: 20,\r\n    dedicatedWalletConnectBridgeUrl: \"https://fei.bridge.walletconnect.org\"\r\n};\r\n\r\nexport default sharedConfig;","import development from \"./development\";\r\nimport staging from \"./staging\";\r\nimport production from \"./production\";\r\nimport shared from \"./shared\";\r\n\r\nconst configByEnvironment = {\r\n    development,\r\n    staging,\r\n    production,\r\n};\r\n\r\nexport const environment = process.env.REACT_APP_ENV || \"development\";\r\n\r\nconst config = configByEnvironment[environment];\r\n\r\nconst mergedConfig = {\r\n    ...shared,\r\n    ...config,\r\n};\r\n\r\nexport default mergedConfig;\r\n","const developmentConfig = {\r\n    // network: \"LOCAL\",\r\n    network: \"RINKEBY\",\r\n    postGenesis: true,\r\n    jsonMode: true,\r\n    comingSoonMode: false,\r\n    analyticsPageEnabled: true,\r\n    amplitudeKey: \"86e08cd9b4c35fb0b5ec6617b0243c86\",\r\n    feiTribeUniswapLpLink: \"https://app.uniswap.org/#/add/0x251F9e3357930cDcF256e15c455588D1a049D77d/0xACef33441fD0CE75D772ba4C7fc4a32b3071C55F\",\r\n};\r\n\r\nexport default developmentConfig;","const stagingConfig = {\r\n    network: \"RINKEBY\",\r\n    postGenesis: false,\r\n    jsonMode: false,\r\n    comingSoonMode: false,\r\n    amplitudeKey: \"86e08cd9b4c35fb0b5ec6617b0243c86\",\r\n    feiTribeUniswapLpLink: \"https://app.uniswap.org/#/add/0x37CbDCE73b16ea8C68A7c29C3Ac6af638f651E0D/0xC6a75927c7f5388Ce9E1BE1eE31Efe0Eede55df3\"\r\n};\r\n\r\nexport default stagingConfig;","const productionConfig = {\r\n    network: \"MAINNET\",\r\n    postGenesis: true,\r\n    jsonMode: false,\r\n    comingSoonMode: false,\r\n    analyticsPageEnabled: true,\r\n    amplitudeKey: \"2fcc8cfff50dbd205cdcb27094c64eff\",\r\n    feiEthUniswapAnalyticsUrl: \"https://info.uniswap.org/pair/0x94B0A3d511b6EcDb17eBF877278Ab030acb0A878\",\r\n    feiTribeUniswapAnalyticsUrl: \"https://info.uniswap.org/pair/0x9928e4046d7c6513326cCeA028cD3e7a91c7590A\",\r\n    feiTribeUniswapLpLink: \"https://app.uniswap.org/#/add/0x956f47f50a910163d8bf957cf5846d573e7f87ca/0xc7283b66eb1eb5fb86327f08e1b5816b0720212b\",\r\n    feiTribeUniswapTradingUrl: \"https://app.uniswap.org/#/swap?inputCurrency=0x956f47f50a910163d8bf957cf5846d573e7f87ca&outputCurrency=0xc7283b66eb1eb5fb86327f08e1b5816b0720212b\",\r\n};\r\n\r\nexport default productionConfig;","import BigNumber from \"bignumber.js\";\r\nimport config from \"../configs\";\r\n\r\nconst MAX_DECIMALS = 6;\r\n\r\nexport function getStakeInfo({\r\n                                 lpTokenSupply,\r\n                                 stakedBalance,\r\n                                 redeemableTribeRewards,\r\n                                 rewardForDuration,\r\n                                 stakedLpSupply,\r\n                                 feiReserves,\r\n                                 tribeReserves\r\n                             }) {\r\n\r\n    const lpTokenSupplyBN = new BigNumber(lpTokenSupply);\r\n    const rewardForDurationBN = new BigNumber(rewardForDuration);\r\n    const stakedLpSupplyBN = new BigNumber(stakedLpSupply);\r\n    const feiReservesBN = new BigNumber(feiReserves);\r\n    const tribeReservesBN = new BigNumber(tribeReserves);\r\n    const stakedBalanceBN = new BigNumber(stakedBalance);\r\n\r\n    const lpTokenValueBN = lpTokenSupplyBN.gt(0) ?\r\n        feiReservesBN.div(lpTokenSupplyBN).times(2) : // The FEI-denominated value of 1 LP token\r\n        new BigNumber(0);\r\n    const weeklyTribeRewardPerStakedLpTokenBN = stakedLpSupplyBN.gt(0) ?\r\n        rewardForDurationBN.div(stakedLpSupplyBN) :\r\n        new BigNumber(0);\r\n    const weeklyTribeRewardPerOneThousandFeiBN =\r\n        weeklyTribeRewardPerStakedLpTokenBN\r\n            .times(1000)\r\n            .div(lpTokenValueBN);\r\n    const tribePriceBN = feiReservesBN.div(tribeReservesBN);\r\n\r\n    const variableApy = weeklyTribeRewardPerOneThousandFeiBN\r\n        .times(tribePriceBN)\r\n        .times(52)\r\n        .times(100).div(1000)\r\n        .dp(2)\r\n        .toString();\r\n    const stakedLpValue = lpTokenValueBN.times(stakedBalanceBN).toString();\r\n    const weeklyTribeRewardPerOneThousandFei = weeklyTribeRewardPerOneThousandFeiBN.toString();\r\n\r\n    return {\r\n        redeemableTribeRewards,\r\n        stakedBalance,\r\n        stakedLpValue,\r\n        weeklyTribeRewardPerOneThousandFei,\r\n        variableApy\r\n    };\r\n}\r\n\r\nexport function getExchangeInfo({\r\n                                inputValue,\r\n                                bnbBalance,\r\n                                beiBalance,\r\n                                bnbReserves,\r\n                                beiReserves,\r\n                                timeWeight,\r\n                                pegPrice,\r\n                                ethPrice,\r\n                                exchangeDirection\r\n                            }) {\r\n\r\n    if (!inputValue) {\r\n        return {};\r\n    }\r\n    const {\r\n        amountOut,\r\n        amountOutMin\r\n    } = getAmountOut({\r\n        inputValue,\r\n        exchangeDirection,\r\n        feiReservesBN: beiReserves,\r\n        ethReservesBN: bnbReserves,\r\n        includeUniswapFee: true,\r\n    });\r\n\r\n    const ethPriceBN = new BigNumber(ethPrice);\r\n    const ethReservesBN = new BigNumber(bnbReserves);\r\n    const feiReservesBN = new BigNumber(beiReserves);\r\n    const timeWeightBN = new BigNumber(timeWeight);\r\n    const pegPriceBN = new BigNumber(pegPrice);\r\n    const feiEthSpotPriceBN = feiReservesBN.div(ethReservesBN);\r\n    const feiUsdcSpotPriceBN = ethPriceBN.div(feiEthSpotPriceBN);\r\n    const amountInBN = new BigNumber(inputValue);\r\n    const amountOutBN = new BigNumber(amountOut);\r\n    const amountOutMinBN = new BigNumber(amountOutMin); // Including slippage 50 bp\r\n\r\n    const {\r\n        expectedReward = \"\",\r\n        minReward = \"\",\r\n        expectedPenalty = \"\",\r\n        maxPenalty = \"\",\r\n        initialPriceDeviationPercentage,\r\n    } = getIncentives({\r\n        inputValue,\r\n        exchangeDirection,\r\n        amountInBN,\r\n        timeWeightBN,\r\n        pegPriceBN,\r\n        feiReservesBN,\r\n        ethReservesBN,\r\n        feiEthSpotPriceBN,\r\n        amountOutBN,\r\n        amountOutMinBN,\r\n    });\r\n\r\n    const {\r\n        amountOutAfterIncentives,\r\n        amountOutMinAfterIncentives\r\n    } = getAmountOutAfterIncentives({\r\n        inputValue,\r\n        expectedReward,\r\n        minReward,\r\n        expectedPenalty,\r\n        maxPenalty,\r\n        feiReservesBN,\r\n        ethReservesBN,\r\n        exchangeDirection,\r\n        amountInBeforeIncentivesBN: amountInBN,\r\n        amountOutBeforeIncentivesBN: amountOutBN,\r\n        amountOutMinBeforeIncentivesBN: amountOutMinBN,\r\n    });\r\n\r\n    const formConfig = {\r\n        BUY: {\r\n            formInputTokenBalance: bnbBalance,\r\n            incentiveAmount: expectedReward,\r\n            worstCaseIncentiveAmount: minReward,\r\n            getInputUSDValue: (inputAmountBN) => {\r\n                return inputValue && ethPriceBN.times(inputAmountBN).toString();\r\n            }\r\n        },\r\n        SELL: {\r\n            formInputTokenBalance: beiBalance,\r\n            incentiveAmount: expectedPenalty,\r\n            worstCaseIncentiveAmount: maxPenalty,\r\n            getInputUSDValue: (inputAmountBN) => {\r\n                return inputValue && feiUsdcSpotPriceBN.times(inputAmountBN).toString();\r\n            },\r\n        },\r\n    };\r\n\r\n    const {\r\n        getInputUSDValue,\r\n        incentiveAmount,\r\n        worstCaseIncentiveAmount,\r\n        formInputTokenBalance,\r\n    } = formConfig[exchangeDirection];\r\n\r\n    const inputUsdValue = getInputUSDValue(amountInBN);\r\n    const maxPenaltyBN = new BigNumber(maxPenalty);\r\n    const burnPenaltyRatioBN = maxPenaltyBN.div(amountInBN);\r\n    const burnPenaltyPercent = burnPenaltyRatioBN.times(100).dp(2).toString();\r\n\r\n    return {\r\n        inputValue,\r\n        inputUsdValue: formatDollarAmount(inputUsdValue),\r\n        amountOut,\r\n        amountOutMin,\r\n        amountOutAfterIncentives,\r\n        amountOutMinAfterIncentives,\r\n        incentiveAmount,\r\n        worstCaseIncentiveAmount,\r\n        formInputTokenBalance,\r\n        burnPenaltyPercent,\r\n        initialPriceDeviationPercentage,\r\n    };\r\n}\r\n\r\nexport function formatDollarAmount(amount) {\r\n    BigNumber.set({ ROUNDING_MODE: 3 })\r\n    const bn = new BigNumber(amount);\r\n    if (bn.eq(0) || !amount) {\r\n        return \"0\";\r\n    }\r\n    if (bn.lt(0.01)) {\r\n        return bn.decimalPlaces(MAX_DECIMALS).toString();\r\n    }\r\n    if (bn.lt(100000)) {\r\n        return withCommas(bn.toFixed(2).toString());\r\n    }\r\n    return withCommas(bn.toFixed(0).toString())\r\n}\r\n\r\nexport function withCommas(amount) {\r\n    if (!amount) {\r\n        return;\r\n    }\r\n    if (typeof(amount) === \"number\") {\r\n        amount = amount.toString();\r\n    }\r\n\r\n    const amountBN = new BigNumber(amount);\r\n    const threeCommaRegex = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n    if (amountBN.isInteger()) {\r\n        return amount.replace(threeCommaRegex, \",\");\r\n    }\r\n    const [integerPart, decimalPart] = amount.split(\".\");\r\n    const integerPartWithCommas = integerPart.replace(threeCommaRegex, \",\");\r\n    return `${integerPartWithCommas}.${decimalPart}`;\r\n\r\n}\r\n\r\n// This calculation is based on the getAmountOut calculation here: https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/libraries/UniswapV2Library.sol\r\n// It takes into account:\r\n//  1. 30 BP Uniswap fee\r\n//  2. Price impact on the uniswap pool\r\nexport function getAmountOut({\r\n                                 inputValue,\r\n                                 exchangeDirection,\r\n                                 feiReservesBN,\r\n                                 ethReservesBN,\r\n                                 includeUniswapFee,\r\n                             }) {\r\n    if (!inputValue) {\r\n        return \"\";\r\n    }\r\n\r\n    const inputAmountBN = new BigNumber(inputValue);\r\n    const inputAmountAfterUniswapFeeBN = inputAmountBN.times(includeUniswapFee ? 0.997 : 1);\r\n    const reserveOutBN = exchangeDirection === \"BUY\" ? feiReservesBN : ethReservesBN;\r\n    const reserveInBN = exchangeDirection === \"BUY\" ? ethReservesBN : feiReservesBN;\r\n    const amountOutNumeratorBN = inputAmountAfterUniswapFeeBN.times(reserveOutBN);\r\n    const amountOutDenominatorBN = reserveInBN.plus(inputAmountAfterUniswapFeeBN);\r\n    const amountOutBN = amountOutNumeratorBN.dividedBy(amountOutDenominatorBN);\r\n    return {\r\n        amountOut: amountOutBN.toString(),\r\n        amountOutMin: amountOutBN.times(1 - config.defaultSlippageParam).toString(),\r\n    };\r\n}\r\n\r\nexport function getAmountOutAfterIncentives({\r\n                                                inputValue,\r\n                                                expectedReward,\r\n                                                minReward,\r\n                                                expectedPenalty,\r\n                                                maxPenalty,\r\n                                                exchangeDirection,\r\n                                                feiReservesBN,\r\n                                                ethReservesBN,\r\n                                                amountInBeforeIncentivesBN,\r\n                                                amountOutBeforeIncentivesBN,\r\n                                                amountOutMinBeforeIncentivesBN,\r\n                                            }) {\r\n    if (!inputValue) {\r\n        return {\r\n            amountOutAfterIncentives: \"\",\r\n            amountOutMinAfterIncentives: \"\",\r\n        };\r\n    }\r\n\r\n    if (exchangeDirection === \"BUY\") {\r\n        return {\r\n            amountOutAfterIncentives: amountOutBeforeIncentivesBN.plus(expectedReward).toString(),\r\n            amountOutMinAfterIncentives: amountOutMinBeforeIncentivesBN.plus(minReward).toString(),\r\n        };\r\n    } else {\r\n        const amountInAfterIncentivesBN = amountInBeforeIncentivesBN.minus(expectedPenalty);\r\n\r\n        const {\r\n            amountOut: amountOutAfterIncentives,\r\n            amountOutMin: amountOutMinAfterIncentives,\r\n        } = getAmountOut({\r\n            inputValue: amountInAfterIncentivesBN.toString(),\r\n            exchangeDirection,\r\n            feiReservesBN,\r\n            ethReservesBN,\r\n            includeUniswapFee: true,\r\n        });\r\n\r\n        return {\r\n            amountOutAfterIncentives,\r\n            amountOutMinAfterIncentives,\r\n        };\r\n\r\n    }\r\n}\r\n\r\nexport function getIncentives({\r\n                                  inputValue,\r\n                                  exchangeDirection,\r\n                                  amountInBN,\r\n                                  timeWeightBN,\r\n                                  pegPriceBN,\r\n                                  feiReservesBN,\r\n                                  ethReservesBN,\r\n                                  feiEthSpotPriceBN,\r\n                                  amountOutBN,\r\n                                  amountOutMinBN,\r\n                              }) {\r\n\r\n    if (!inputValue) {\r\n        return {};\r\n    }\r\n\r\n    const {\r\n        feiReservesAfterTradeBN,\r\n        ethReservesAfterTradeBN,\r\n    } = calculateReservesAfterTrade({\r\n        feiReservesBN,\r\n        ethReservesBN,\r\n        amountInBN,\r\n        exchangeDirection,\r\n    });\r\n\r\n    const feiEthSpotPriceAfterTradeBN = feiReservesAfterTradeBN.div(ethReservesAfterTradeBN);\r\n\r\n    const {\r\n        initialPriceDeviationRatioBN,\r\n        finalPriceDeviationRatioBN,\r\n    } = calculateDeviationsBN({\r\n        feiEthSpotPriceBN,\r\n        feiEthSpotPriceAfterTradeBN,\r\n        pegPriceBN,\r\n    });\r\n\r\n    const rewardArgs = {\r\n        amountInBN,\r\n        pegPriceBN,\r\n        timeWeightBN,\r\n        feiReservesBN,\r\n        ethReservesBN,\r\n        feiEthSpotPriceBN,\r\n        feiEthSpotPriceAfterTradeBN,\r\n        initialPriceDeviationRatioBN,\r\n        finalPriceDeviationRatioBN,\r\n        amountOutBN,\r\n        amountOutMinBN,\r\n    };\r\n\r\n    const penaltyArgs = {\r\n        amountInBN,\r\n        pegPriceBN,\r\n        feiEthSpotPriceBN,\r\n        feiEthSpotPriceAfterTradeBN,\r\n        initialPriceDeviationRatioBN,\r\n        finalPriceDeviationRatioBN,\r\n        feiReservesBN,\r\n        ethReservesBN,\r\n    };\r\n\r\n    const expectedReward = getReward(rewardArgs);\r\n\r\n    const minReward = getReward({\r\n        isMinReward: true,\r\n        ...rewardArgs,\r\n    });\r\n\r\n    const expectedPenalty = getPenalty(penaltyArgs);\r\n    const maxPenalty = getPenalty({\r\n        isMaxPenalty: true,\r\n        ...penaltyArgs,\r\n    });\r\n\r\n    const initialPriceDeviationPercentage = initialPriceDeviationRatioBN\r\n        .times(100)\r\n        .dp(2)\r\n        .toString();\r\n\r\n    return {\r\n        expectedReward,\r\n        minReward,\r\n        expectedPenalty,\r\n        maxPenalty,\r\n        initialPriceDeviationPercentage,\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction getReward({\r\n                       amountOutBN,\r\n                       amountOutMinBN,\r\n                       timeWeightBN,\r\n                       pegPriceBN,\r\n                       feiEthSpotPriceBN,\r\n                       feiReservesBN,\r\n                       ethReservesBN,\r\n                       feiEthSpotPriceAfterTradeBN,\r\n                       isMinReward,\r\n                       initialPriceDeviationRatioBN,\r\n                       finalPriceDeviationRatioBN,\r\n                   }) {\r\n\r\n    // If we are at or above the peg\r\n    console.log(\"expectedReward: \", feiEthSpotPriceBN.toNumber(), pegPriceBN.toNumber())\r\n    if (feiEthSpotPriceBN.lte(pegPriceBN)) {\r\n        return \"0\";\r\n    }\r\n\r\n    let incentivizedAmountOutBN = isMinReward ? amountOutMinBN : amountOutBN;\r\n    // If we end up at or above the peg after the trade\r\n    if (feiEthSpotPriceAfterTradeBN.lte(pegPriceBN)) {\r\n        // We incentivize only the amount needed to get to the peg\r\n        incentivizedAmountOutBN = getAmountToPegFeiBN({\r\n            feiReservesBN,\r\n            ethReservesBN,\r\n            pegPriceBN,\r\n        });\r\n        // We are applying the slippage here because the piece-wise math is likely\r\n        // to reduce the incentivized amount by more than the slippage\r\n        if (isMinReward) {\r\n            incentivizedAmountOutBN = incentivizedAmountOutBN.times(1 - config.defaultSlippageParam);\r\n        }\r\n    }\r\n\r\n    const buyMultiplierBN = initialPriceDeviationRatioBN.times(timeWeightBN);\r\n    const correspondingSellMultiplierBN = calculateIntegratedSellPenaltyMultiplierBN(\r\n        initialPriceDeviationRatioBN,\r\n        finalPriceDeviationRatioBN,\r\n    );\r\n\r\n    // Cap the buy multiplier at the corresponding sell multiplier\r\n    const finalBuyMultiplierBN = correspondingSellMultiplierBN.lt(buyMultiplierBN) ?\r\n        correspondingSellMultiplierBN : buyMultiplierBN;\r\n\r\n\r\n    const rewardBN = finalBuyMultiplierBN.times(incentivizedAmountOutBN);\r\n\r\n    if (rewardBN.lt(0)) {\r\n        return \"0\";\r\n    }\r\n\r\n    // Here we truncate to 2 decimal places in order to avoid math errors putting us over the min\r\n\r\n    return rewardBN.dp(18, BigNumber.ROUND_DOWN).toString();\r\n}\r\n\r\nfunction calculateIntegratedSellPenaltyMultiplierBN(initialDeviationRatioBN, finalDeviationRatioBN) {\r\n    if (initialDeviationRatioBN.eq(finalDeviationRatioBN)) {\r\n        return calculateSellPenaltyMultiplierBN(initialDeviationRatioBN);\r\n    }\r\n    const numeratorBN = calculateSellPenaltyBoundBN(finalDeviationRatioBN).minus(\r\n        calculateSellPenaltyBoundBN(initialDeviationRatioBN)\r\n    );\r\n    const denominatorBN = finalDeviationRatioBN.minus(initialDeviationRatioBN);\r\n    const multiplierBN = numeratorBN.div(denominatorBN);\r\n    const oneBN = new BigNumber(1);\r\n    // Cap the multiplier at 1 since the fee is inclusive of the amount\r\n    return multiplierBN.gt(oneBN) ? oneBN : multiplierBN;\r\n\r\n}\r\n\r\n// m^2 * 100\r\nfunction calculateSellPenaltyMultiplierBN(initialDeviationBN) {\r\n    return initialDeviationBN.times(initialDeviationBN).times(100);\r\n}\r\n\r\nfunction calculateSellPenaltyBoundBN(deviationBN) {\r\n    return deviationBN.pow(3).times(33);\r\n}\r\n\r\nfunction getPenalty({\r\n                        amountInBN,\r\n                        feiReservesBN,\r\n                        ethReservesBN,\r\n                        pegPriceBN,\r\n                        feiEthSpotPriceBN,\r\n                        feiEthSpotPriceAfterTradeBN,\r\n                        initialPriceDeviationRatioBN,\r\n                        finalPriceDeviationRatioBN,\r\n                        isMaxPenalty,\r\n                    }) {\r\n\r\n    // If the spot price after the sell is at or above the peg,\r\n    // return 0. Also means we must be at or above the peg pre-trade\r\n    if (feiEthSpotPriceAfterTradeBN.lte(pegPriceBN)) {\r\n        // The trade doesn't bring FEI under the peg\r\n        return \"0\";\r\n    }\r\n\r\n    // Assume that the incentive will apply to the whole amountIn\r\n    // meaning we are currently below the peg\r\n    let incentivizedAmountInBN = amountInBN;\r\n    // However, if the current spot price is at or above the peg,\r\n    // this means that this will be the trade that brings us under\r\n    // the peg\r\n    if (feiEthSpotPriceBN.lte(pegPriceBN)) {\r\n        const amountToPegBN = getAmountToPegFeiBN({\r\n            feiReservesBN,\r\n            ethReservesBN,\r\n            pegPriceBN,\r\n        });\r\n        // Don't apply the burn to the amount that brings us from\r\n        // the current price to the peg. Only to the amount that is\r\n        // pushing us under the peg.\r\n        incentivizedAmountInBN = amountInBN.minus(amountToPegBN);\r\n    }\r\n\r\n\r\n\r\n    const multiplierBN = calculateIntegratedSellPenaltyMultiplierBN(\r\n        initialPriceDeviationRatioBN.plus(isMaxPenalty ? config.defaultSlippageParam : 0),\r\n        finalPriceDeviationRatioBN.plus(isMaxPenalty ? config.defaultSlippageParam : 0)\r\n    );\r\n\r\n    const penaltyBN = multiplierBN.times(incentivizedAmountInBN);\r\n\r\n    return penaltyBN.dp(18, BigNumber.ROUND_UP).toString();\r\n}\r\n\r\nfunction calculateReservesAfterTrade({\r\n                                         feiReservesBN,\r\n                                         ethReservesBN,\r\n                                         amountInBN,\r\n                                         exchangeDirection,\r\n                                     }) {\r\n    const poolInvariantBN = feiReservesBN.times(ethReservesBN);\r\n    const amountInAfterFeeBN = amountInBN.times(0.997);\r\n    let feiReservesAfterTradeBN;\r\n    let ethReservesAfterTradeBN;\r\n    if (exchangeDirection === \"SELL\") {\r\n        feiReservesAfterTradeBN = feiReservesBN.plus(amountInAfterFeeBN);\r\n        ethReservesAfterTradeBN = poolInvariantBN.div(feiReservesAfterTradeBN);\r\n    }\r\n    if (exchangeDirection === \"BUY\") {\r\n        ethReservesAfterTradeBN = ethReservesBN.plus(amountInAfterFeeBN);\r\n        feiReservesAfterTradeBN = poolInvariantBN.div(ethReservesAfterTradeBN);\r\n    }\r\n    return {\r\n        feiReservesAfterTradeBN,\r\n        ethReservesAfterTradeBN,\r\n    };\r\n}\r\n\r\nfunction getAmountToPegFeiBN({\r\n                                 feiReservesBN,\r\n                                 ethReservesBN,\r\n                                 pegPriceBN,\r\n                             }) {\r\n    return getAmountToPegBN({\r\n        reserveTargetBN: feiReservesBN,\r\n        reserveOtherBN: ethReservesBN,\r\n        pegBN: pegPriceBN,\r\n    });\r\n}\r\n\r\nfunction getAmountToPegBN({\r\n                              reserveTargetBN,\r\n                              reserveOtherBN,\r\n                              pegBN,\r\n                          }) {\r\n    const rootBN = reserveTargetBN\r\n        .times(reserveOtherBN)\r\n        .times(pegBN)\r\n        .squareRoot();\r\n    // The amount to peg needs to account for the 30bp uniswap fee\r\n    if (rootBN.gt(reserveTargetBN)) {\r\n        return rootBN.minus(reserveTargetBN).times(0.997);\r\n    }\r\n    return reserveTargetBN.minus(rootBN).times(0.997);\r\n}\r\n\r\nfunction calculateDeviationsBN({\r\n                                   feiEthSpotPriceBN,\r\n                                   feiEthSpotPriceAfterTradeBN,\r\n                                   pegPriceBN,\r\n                               }) {\r\n\r\n    const initialPriceDeviationRatioBN = feiEthSpotPriceBN.lte(pegPriceBN) ?\r\n        new BigNumber(0) :\r\n        feiEthSpotPriceBN.minus(pegPriceBN).div(pegPriceBN);\r\n\r\n    const finalPriceDeviationRatioBN = feiEthSpotPriceAfterTradeBN.lte(pegPriceBN) ?\r\n        new BigNumber(0) :\r\n        feiEthSpotPriceAfterTradeBN.minus(pegPriceBN).div(pegPriceBN);\r\n\r\n    return {\r\n        initialPriceDeviationRatioBN,\r\n        finalPriceDeviationRatioBN,\r\n    };\r\n\r\n}\r\n","import { useCallback } from 'react';\r\nimport useTiTICoreContracts from './useTiTICoreContracts';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\n\r\nconst useBuy = () => {\r\n    const beiCash = useTiTICoreContracts();\r\n    const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n    const handleBuy = useCallback((amount: number) => {\r\n        const amountBn = parseUnits(amount.toString(), 18);\r\n        handleTransactionReceipt(beiCash.buy(amountBn), `Buy ${amount}`);\r\n    }, [beiCash, handleTransactionReceipt]);\r\n\r\n    return { onBuy: handleBuy };\r\n};\r\n\r\nexport default useBuy;\r\n","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from \"../../../components/Button\";\r\nimport HalfCard from \"../../../components/HalfCard\";\r\nimport CardRow from \"../../../components/CardRow\";\r\nimport usdcLogo from \"../../../assets/img/icon/usdc.svg\";\r\nimport daiLogo from \"../../../assets/img/icon/dai.svg\";\r\nimport ethLogo from \"../../../assets/img/icon/eth.svg\";\r\nimport wbtcLogo from \"../../../assets/img/icon/wbtc.svg\";\r\n\r\nimport bei from \"../../../assets/img/icon/whiteLogo.svg\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport {getAmountOut} from \"../../../titi-core-contracts/calculations\";\r\nimport useBuy from \"../../../hooks/useBuy\";\r\nimport swap from \"../../../assets/img/icon/swap.svg\";\r\n\r\ninterface ExchangeCardInfo {\r\n    userBNBBalance: number,\r\n    userBEIBalance: number,\r\n    bnbReserve: number,\r\n    beiReserve: number,\r\n    timeWeight: number,\r\n    pegPrice: number,\r\n    bnbPrice: number,\r\n    isBuy: () => void,\r\n    tokenSymbol: string\r\n}\r\n\r\ninterface BuyInfo {\r\n    amountOut?: string,\r\n    amountOutMin?: string\r\n}\r\n\r\nconst BuyCard: React.FC<ExchangeCardInfo> = ({userBNBBalance,userBEIBalance,bnbReserve,\r\n                                                 beiReserve, timeWeight, pegPrice, bnbPrice,\r\n                                                 isBuy, tokenSymbol}) => {\r\n    const [bnbAmountInput, setBNBAmountInput] = useState<number>(0);\r\n    const [beiAmountOutput, setBEIAmountOutput] = useState<number>(0);\r\n    const [userInputUSD, setUserInputUSD] = useState<number>(0);\r\n    const [slippage, setSlippage] = useState<number>(0);\r\n\r\n    const { onBuy } = useBuy();\r\n\r\n    useEffect(() => {\r\n            // @ts-ignore\r\n        const buyInfo: BuyInfo = getAmountOut({\r\n                inputValue: new BigNumber(bnbAmountInput),\r\n                exchangeDirection: \"BUY\",\r\n                feiReservesBN: new BigNumber(bnbReserve),\r\n                ethReservesBN: new BigNumber(beiReserve),\r\n                includeUniswapFee: true,\r\n            });\r\n\r\n            setUserInputUSD(bnbAmountInput);\r\n            if (buyInfo.amountOut === \"NaN\") {\r\n                setSlippage(0);\r\n                setBEIAmountOutput(0);\r\n            } else if(Number(buyInfo.amountOut) > 0) {\r\n                setSlippage((bnbAmountInput - Number(buyInfo.amountOut)) / bnbAmountInput);\r\n                setBEIAmountOutput(Number(buyInfo.amountOut));\r\n            } else {\r\n                setSlippage(0);\r\n                setBEIAmountOutput(0);\r\n            }\r\n\r\n        }, [bnbAmountInput,userBNBBalance,userBEIBalance,bnbReserve,beiReserve,timeWeight,pegPrice,bnbPrice]\r\n    );\r\n\r\n    return (\r\n        <StyledMain>\r\n            <HalfCard bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"100%\">\r\n                <BalanceRowWrapper>\r\n                    <div style={{fontSize: \"14px\", color: \"#A0A0A0\"}}>BALANCE: {userBNBBalance} {tokenSymbol}</div>\r\n                    <MaxButton onClick={()=>{setBNBAmountInput(userBNBBalance)}}/>\r\n                </BalanceRowWrapper>\r\n                <CardRow marginTop=\"10px\" marginBottom=\"5px\">\r\n                    <div style={{position: \"absolute\", top: \"10px\", left: \"20px\"}}>\r\n                        {\r\n                            tokenSymbol === \"USDC\" ? (\r\n                                <img src={usdcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                            ) : (\r\n                                tokenSymbol === \"DAI\" ? (\r\n                                    <img src={daiLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                ) : (\r\n                                    tokenSymbol === \"ETH\" ? (\r\n                                        <img src={ethLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                    ) : (\r\n                                        tokenSymbol === \"WBTC\" ? (\r\n                                            <img src={wbtcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                        ) : (\r\n                                            <div />\r\n                                        )\r\n                                    )\r\n                                )\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <InputElement type=\"number\"\r\n                                  value={Math.floor(bnbAmountInput * 100) / 100}\r\n                                  onChange={(e)=>{setBNBAmountInput(e.target.valueAsNumber)}}\r\n                                  placeholder=\"Input Amount\"/>\r\n                </CardRow>\r\n                <TextRowWrapper>\r\n                    <div style={{fontSize: \"14px\", color: \"#A0A0A0\"}}>USD VALUE</div>\r\n                    <div style={{fontSize: \"14px\", color: \"#A0A0A0\"}}>{userInputUSD}</div>\r\n                </TextRowWrapper>\r\n                <SwapButton onClick={isBuy}/>\r\n                <CardRow marginTop=\"10px\" marginBottom=\"5px\">\r\n                    <div style={{position: \"absolute\", top: \"10px\", left: \"20px\"}}>\r\n                        <img src={bei} alt=\"bei\" height=\"30px\" width=\"30px\"/>\r\n                    </div>\r\n                    <OutputElement>{Math.floor(beiAmountOutput * 100) / 100}</OutputElement>\r\n                </CardRow>\r\n                <TextRowWrapper>\r\n                    <div style={{fontSize: \"14px\", color: \"#A0A0A0\"}}>SLIPPAGE</div>\r\n                    <div style={{fontSize: \"14px\", color: \"#A0A0A0\"}}>{(slippage * 100).toFixed(3)} %</div>\r\n                </TextRowWrapper>\r\n                <CardRow marginTop=\"30px\" marginBottom=\"30px\">\r\n                    <BuyButton onClick={() => {onBuy(bnbAmountInput)}}/>\r\n                </CardRow>\r\n            </HalfCard>\r\n        </StyledMain>\r\n    );\r\n};\r\n\r\ninterface MaxButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst MaxButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"16px\" buttonPadding=\"8px\" onClick={onClick}>\r\n            MAX\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst SwapButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <StyledSwapButton onClick={onClick}>\r\n            <img src={swap} alt=\"bei\" height=\"30px\" width=\"30px\"/>\r\n        </StyledSwapButton>\r\n    );\r\n};\r\n\r\nconst BuyButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"22px\" buttonPadding=\"10px 20px 10px\" width=\"100%\" onClick={onClick}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <div>\r\n                    Swap\r\n                </div>\r\n            </div>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst BalanceRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 30px;\r\n    margin-bottom: 5px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 78%;\r\n    color: #000;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst TextRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 78%;\r\n    color: #000;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst InputElement = styled.input`\r\n    border-radius: 15px;\r\n    background-color: #000;\r\n    color: #FFF;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    height: 55px;\r\n    line-height: normal;\r\n    padding-left: 25px;\r\n    padding-right: 25px;\r\n    margin-bottom: 10px;\r\n    text-align: right;\r\n    width: 100%;\r\n    appearance: none;\r\n    box-sizing: border-box;\r\n    outline: transparent none 1px;\r\n    outline-offset: 4px;\r\n    transition-duration: 150ms;\r\n    transition-property: all;\r\n    transition-timing-function: ease-in-out;\r\n    outline: none;\r\n    border:0px;\r\n    @media (pointer: fine) {\r\n        &:hover {\r\n        }\r\n    }\r\n\r\n    &:focus {\r\n    }\r\n\r\n    ::-webkit-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::-moz-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    /* Settings to remove arrows from numeric input */\r\n    ::-webkit-outer-spin-button,\r\n    ::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n    [type=number] {\r\n        -moz-appearance: textfield;\r\n    }\r\n`;\r\n\r\nconst OutputElement = styled.div`\r\n    border-radius: 15px;\r\n    background-color: #000;\r\n    color: #FFF;\r\n    font-size: 24px;\r\n    height: 50px;\r\n    line-height: 50px;\r\n    padding-left: 25px;\r\n    padding-right: 25px;\r\n    margin-bottom: 10px;\r\n    text-align: right;\r\n    width: 100%;\r\n    appearance: none;\r\n    box-sizing: border-box;\r\n    outline: transparent none 1px;\r\n    outline-offset: 4px;\r\n    transition-duration: 150ms;\r\n    transition-property: all;\r\n    transition-timing-function: ease-in-out;\r\n\r\n    @media (pointer: fine) {\r\n        &:hover {\r\n        }\r\n    }\r\n\r\n    &:focus {\r\n    }\r\n\r\n    ::-webkit-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::-moz-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    /* Settings to remove arrows from numeric input */\r\n    ::-webkit-outer-spin-button,\r\n    ::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n    [type=number] {\r\n        -moz-appearance: textfield;\r\n    }\r\n`;\r\n\r\nconst StyledMain = styled.div`\r\n    margin-top: 15px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 30%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    @media (max-width: 768px) {\r\n        width: 80%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex: 1;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst StyledSwapButton = styled.button`\r\n    font-weight: 500;\r\n    width: 50px;\r\n    text-decoration: none;\r\n    transition: all 0.3s;\r\n    border: 0px solid #B5E3D5;\r\n    outline: none;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    &:hover {\r\n        transform: scale(1.06, 1.06);\r\n    }\r\n`\r\n\r\nexport default BuyCard;\r\n","import { useCallback } from 'react';\r\nimport useTiTICoreContracts from './useTiTICoreContracts';\r\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\r\nimport { parseUnits } from 'ethers/lib/utils';\r\n\r\nconst useSell = () => {\r\n    const beiCash = useTiTICoreContracts();\r\n    const handleTransactionReceipt = useHandleTransactionReceipt();\r\n\r\n    const handleSell = useCallback((amount: number) => {\r\n        const amountBn = parseUnits(amount.toString(), 18);\r\n        handleTransactionReceipt(beiCash.sell(amountBn), `Sell ${amount}`);\r\n    }, [beiCash, handleTransactionReceipt]);\r\n\r\n    return { onSell: handleSell };\r\n};\r\n\r\nexport default useSell;\r\n","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from \"../../../components/Button\";\r\nimport CardRow from \"../../../components/CardRow\";\r\nimport bei from \"../../../assets/img/icon/whiteLogo.svg\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport {getAmountOut} from \"../../../titi-core-contracts/calculations\";\r\nimport HalfCard from \"../../../components/HalfCard\";\r\nimport useSell from \"../../../hooks/useSell\";\r\nimport swap from \"../../../assets/img/icon/swap.svg\";\r\nimport usdcLogo from \"../../../assets/img/icon/usdc.svg\";\r\nimport daiLogo from \"../../../assets/img/icon/dai.svg\";\r\nimport ethLogo from \"../../../assets/img/icon/eth.svg\";\r\nimport wbtcLogo from \"../../../assets/img/icon/wbtc.svg\";\r\n\r\n\r\ninterface ExchangeCardInfo {\r\n    userBNBBalance: number,\r\n    userBEIBalance: number,\r\n    bnbReserve: number,\r\n    beiReserve: number,\r\n    timeWeight: number,\r\n    pegPrice: number,\r\n    bnbPrice: number,\r\n    isBuy: () => void,\r\n    tokenSymbol: string\r\n}\r\n\r\ninterface SellInfo {\r\n    amountOut?: string,\r\n    amountOutMin?: string\r\n}\r\n\r\nconst SellCard: React.FC<ExchangeCardInfo> = ({userBNBBalance,userBEIBalance,bnbReserve,\r\n                                                  beiReserve, timeWeight, pegPrice, bnbPrice,\r\n                                                isBuy, tokenSymbol}) => {\r\n    const [beiAmountInput, setBEIAmountInput] = useState<number>(0);\r\n    const [bnbAmountOutput, setBNBAmountOutput] = useState<number>(0);\r\n    const [userInputUSD, setUserInputUSD] = useState<number>(0);\r\n    const [slippage, setSlippage] = useState<number>(0);\r\n\r\n    const { onSell } = useSell();\r\n\r\n    useEffect(() => {\r\n            // @ts-ignore\r\n        const sellInfo: SellInfo = getAmountOut({\r\n                inputValue: new BigNumber(beiAmountInput),\r\n                exchangeDirection: \"BUY\",\r\n                feiReservesBN: new BigNumber(bnbReserve),\r\n                ethReservesBN: new BigNumber(beiReserve),\r\n                includeUniswapFee: true,\r\n            });\r\n\r\n            setUserInputUSD(beiAmountInput);\r\n            if (sellInfo.amountOut === \"NaN\") {\r\n                setSlippage(0);\r\n                setBNBAmountOutput(0);\r\n            } else if(Number(sellInfo.amountOut) > 0) {\r\n                setSlippage((beiAmountInput - Number(sellInfo.amountOut)) / beiAmountInput);\r\n                setBNBAmountOutput(Number(sellInfo.amountOut));\r\n            } else {\r\n                setSlippage(0);\r\n                setBNBAmountOutput(0);\r\n            }\r\n\r\n        }, [beiAmountInput,userBNBBalance,userBEIBalance,bnbReserve,beiReserve,timeWeight,pegPrice,bnbPrice]\r\n    );\r\n\r\n    return (\r\n        <StyledMain>\r\n            <HalfCard bgColor=\"#262729\" shadowColor=\"#D3D1CD\" width=\"30%\">\r\n                <BalanceRowWrapper>\r\n                    <div style={{fontSize: \"14px\", color: \"#A0A0A0\"}}>BALANCE: {userBEIBalance} TITI</div>\r\n                    <MaxButton onClick={()=>{setBEIAmountInput(userBEIBalance)}}/>\r\n                </BalanceRowWrapper>\r\n                <CardRow marginTop=\"10px\" marginBottom=\"5px\">\r\n                    <div style={{position: \"absolute\", top: \"10px\", left: \"20px\"}}>\r\n                        <img src={bei} alt=\"bei\" height=\"30px\" width=\"30px\"/>\r\n                    </div>\r\n                    <InputElement type=\"number\"\r\n                                  value={Math.floor(beiAmountInput * 100) / 100}\r\n                                  onChange={(e)=>{setBEIAmountInput(e.target.valueAsNumber)}}\r\n                                  placeholder=\"Input Amount\"/>\r\n                </CardRow>\r\n                <TextRowWrapper>\r\n                    <div style={{fontSize: \"14px\", color: \"#A0A0A0\"}}>USD VALUE</div>\r\n                    <div style={{fontSize: \"14px\", color: \"#A0A0A0\"}}>{userInputUSD}</div>\r\n                </TextRowWrapper>\r\n                <SwapButton onClick={isBuy}/>\r\n                <CardRow marginTop=\"10px\" marginBottom=\"5px\">\r\n                    <div style={{position: \"absolute\", top: \"10px\", left: \"20px\"}}>\r\n                        {\r\n                            tokenSymbol === \"USDC\" ? (\r\n                                <img src={usdcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                            ) : (\r\n                                tokenSymbol === \"DAI\" ? (\r\n                                    <img src={daiLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                ) : (\r\n                                    tokenSymbol === \"ETH\" ? (\r\n                                        <img src={ethLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                    ) : (\r\n                                        tokenSymbol === \"WBTC\" ? (\r\n                                            <img src={wbtcLogo} alt=\"bnbLogo\" height=\"30px\" width=\"30px\"/>\r\n                                        ) : (\r\n                                            <div />\r\n                                        )\r\n                                    )\r\n                                )\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <OutputElement>{Math.floor(bnbAmountOutput * 100) / 100}</OutputElement>\r\n                </CardRow>\r\n                <TextRowWrapper>\r\n                    <div style={{fontSize: \"14px\", color: \"#A0A0A0\"}}>SLIPPAGE</div>\r\n                    <div style={{fontSize: \"14px\", color: \"#A0A0A0\"}}>{(slippage * 100).toFixed(3)} %</div>\r\n                </TextRowWrapper>\r\n                <CardRow marginTop=\"30px\" marginBottom=\"30px\">\r\n                    <SellButton onClick={() => {onSell(beiAmountInput)}}/>\r\n                </CardRow>\r\n            </HalfCard>\r\n        </StyledMain>\r\n    );\r\n};\r\n\r\ninterface MaxButtonProps {\r\n    onClick?: () => void\r\n}\r\n\r\nconst MaxButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"16px\" buttonPadding=\"8px\" onClick={onClick}>\r\n            MAX\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst SwapButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <StyledSwapButton onClick={onClick}>\r\n            <img src={swap} alt=\"bei\" height=\"30px\" width=\"30px\"/>\r\n        </StyledSwapButton>\r\n    );\r\n};\r\n\r\nconst SellButton: React.FC<MaxButtonProps> = ({onClick}) => {\r\n    return (\r\n        <Button fontSize=\"22px\" buttonPadding=\"10px 20px 10px\" width=\"100%\" onClick={onClick}>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <div>\r\n                    Swap\r\n                </div>\r\n            </div>\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst BalanceRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 30px;\r\n    margin-bottom: 5px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 78%;\r\n    color: #000;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst StyledSwapButton = styled.button`\r\n    font-weight: 500;\r\n    width: 50px;\r\n    text-decoration: none;\r\n    transition: all 0.3s;\r\n    border: 0px solid #B5E3D5;\r\n    outline: none;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    &:hover {\r\n        transform: scale(1.06, 1.06);\r\n    }\r\n`\r\n\r\nconst TextRowWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: center;\r\n    width: 78%;\r\n    color: #000;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst InputElement = styled.input`\r\n    border-radius: 15px;\r\n    background-color: #000;\r\n    color: #FFF;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n    height: 55px;\r\n    line-height: normal;\r\n    padding-left: 25px;\r\n    padding-right: 25px;\r\n    margin-bottom: 10px;\r\n    text-align: right;\r\n    width: 100%;\r\n    appearance: none;\r\n    box-sizing: border-box;\r\n    outline: transparent none 1px;\r\n    outline-offset: 4px;\r\n    transition-duration: 150ms;\r\n    transition-property: all;\r\n    transition-timing-function: ease-in-out;\r\n    outline: none;\r\n    border:0px;\r\n    @media (pointer: fine) {\r\n        &:hover {\r\n        }\r\n    }\r\n\r\n    &:focus {\r\n    }\r\n\r\n    ::-webkit-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::-moz-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    /* Settings to remove arrows from numeric input */\r\n    ::-webkit-outer-spin-button,\r\n    ::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n    [type=number] {\r\n        -moz-appearance: textfield;\r\n    }\r\n`;\r\n\r\nconst OutputElement = styled.div`\r\n    border-radius: 15px;\r\n    background-color: #000;\r\n    color: #FFF;\r\n    font-size: 24px;\r\n    height: 50px;\r\n    line-height: 50px;\r\n    padding-left: 25px;\r\n    padding-right: 25px;\r\n    margin-bottom: 10px;\r\n    text-align: right;\r\n    width: 100%;\r\n    appearance: none;\r\n    box-sizing: border-box;\r\n    outline: transparent none 1px;\r\n    outline-offset: 4px;\r\n    transition-duration: 150ms;\r\n    transition-property: all;\r\n    transition-timing-function: ease-in-out;\r\n\r\n    @media (pointer: fine) {\r\n        &:hover {\r\n        }\r\n    }\r\n\r\n    &:focus {\r\n    }\r\n\r\n    ::-webkit-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::-moz-input-placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    ::placeholder {\r\n        line-height: normal;\r\n    }\r\n\r\n    /* Settings to remove arrows from numeric input */\r\n    ::-webkit-outer-spin-button,\r\n    ::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n    [type=number] {\r\n        -moz-appearance: textfield;\r\n    }\r\n`;\r\n\r\nconst StyledMain = styled.div`\r\n    margin-top: 15px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    @media (max-width: 768px) {\r\n        width: 80%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex: 1;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nexport default SellCard;\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {Switch} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Page from \"../../components/Page\";\r\nimport ModeSelect from \"./components/ModeSelect\";\r\nimport BuyCard from \"./components/BuyCard\";\r\nimport SellCard from \"./components/SellCard\";\r\nimport useTiTICoreContracts from \"../../hooks/useTiTICoreContracts\";\r\nimport usdcTiTi from \"../../assets/img/icon/usdc-titi.svg\";\r\nimport daiTiTi from \"../../assets/img/icon/dai-titi.svg\";\r\nimport ethTiTi from \"../../assets/img/icon/eth-titi.svg\"\r\nimport wbtcTiTi from \"../../assets/img/icon/btc-titi.svg\";\r\n\r\nconst Exchange: React.FC = () => {\r\n    const [isBuy, setIsBuy] = useState(true);\r\n    const handleIsBuy = useCallback(() => {\r\n        setIsBuy(!isBuy)\r\n    }, [isBuy, setIsBuy])\r\n\r\n    const [userTokenSymbol, setUserTokenSymbol] = useState<string>(\"USDC\");\r\n\r\n    const handleTokenSelect = useCallback((symbol) => {\r\n        setUserTokenSymbol(symbol)\r\n    }, [setUserTokenSymbol])\r\n\r\n    const [userBNBBalance, setUserBNBBalance] = useState<number>(0);\r\n    const [userBEIBalance, setUserBEIBalance] = useState<number>(0);\r\n    const [bnbReserve, setBNBReserve] = useState<number>(0);\r\n    const [beiReserve, setBEIReserve] = useState<number>(0);\r\n    const [timeWeight, setTimeWeight] = useState<number>(0);\r\n    const [pegPrice, setPegPrice] = useState<number>(0);\r\n    const [bnbPrice, setBNBPrice] = useState<number>(0);\r\n\r\n    const beiCash = useTiTICoreContracts();\r\n    const fetchStats = useCallback(async () => {\r\n        let [userBEIBalance, userBNBBalance, reserves, pegPrice, bnbPrice] = await Promise.all([\r\n            beiCash.getTITIBalance(),\r\n            beiCash.getUSDCBalance(),\r\n            beiCash.getTITIUSDCReserves(),\r\n            beiCash.getPegPrice(),\r\n            //beiCash.getBNBPrice(),\r\n            1\r\n        ]);\r\n        if (userTokenSymbol !== \"USDC\") {\r\n            userBNBBalance = 0;\r\n            userBEIBalance = 0\r\n        }\r\n        setUserBNBBalance(userBNBBalance);\r\n        setUserBEIBalance(userBEIBalance);\r\n        setBNBReserve(reserves[0]);\r\n        setBEIReserve(reserves[1]);\r\n        setTimeWeight(0);\r\n        setPegPrice(pegPrice);\r\n        setBNBPrice(bnbPrice);\r\n    }, [beiCash, userTokenSymbol]);\r\n\r\n    useEffect(() => {\r\n        if (beiCash) {\r\n            fetchStats().catch((err) => console.error(err.stack));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [beiCash?.isUnlocked, fetchStats]);\r\n    //<StyledPrice>TiTi Price: ${pegPrice.toFixed(3)}</StyledPrice>\r\n    return (\r\n        <Switch>\r\n            <Page>\r\n                <StyledMain>\r\n                    <StyledHeader>{userTokenSymbol}-TiTi</StyledHeader>\r\n                    {\r\n                        userTokenSymbol === \"USDC\" ? (\r\n                            <img src={usdcTiTi} alt=\"bei\" height=\"50px\" />\r\n                        ) : (\r\n                            userTokenSymbol === \"DAI\" ? (\r\n                                <img src={daiTiTi} alt=\"bei\" height=\"50px\" />\r\n                            ) : (\r\n                                userTokenSymbol === \"ETH\" ? (\r\n                                    <img src={ethTiTi} alt=\"bei\" height=\"50px\" />\r\n                                ) : (\r\n                                    userTokenSymbol === \"WBTC\" ? (\r\n                                        <img src={wbtcTiTi} alt=\"bei\" height=\"50px\" />\r\n                                    ) : (\r\n                                        <div />\r\n                                    )\r\n                                )\r\n                            )\r\n                        )\r\n                    }\r\n                    <StyledHeaderPrice>\r\n                        <StyledPrice>Peg Price: $1.000</StyledPrice>\r\n                    </StyledHeaderPrice>\r\n\r\n                    <ModeSelect symbol={userTokenSymbol} handleTokenSelect={handleTokenSelect}/>\r\n                    {\r\n                        isBuy ? (\r\n                            <BuyCard\r\n                                userBNBBalance={userBNBBalance}\r\n                                userBEIBalance={userBEIBalance}\r\n                                bnbReserve={bnbReserve}\r\n                                beiReserve={beiReserve}\r\n                                timeWeight={timeWeight}\r\n                                pegPrice={pegPrice}\r\n                                bnbPrice={bnbPrice}\r\n                                isBuy={handleIsBuy}\r\n                                tokenSymbol={userTokenSymbol}\r\n                            />\r\n                        ) : (\r\n                            <SellCard\r\n                                userBNBBalance={userBNBBalance}\r\n                                userBEIBalance={userBEIBalance}\r\n                                bnbReserve={bnbReserve}\r\n                                beiReserve={beiReserve}\r\n                                timeWeight={timeWeight}\r\n                                pegPrice={pegPrice}\r\n                                bnbPrice={bnbPrice}\r\n                                isBuy={handleIsBuy}\r\n                                tokenSymbol={userTokenSymbol}\r\n                            />\r\n                        )\r\n                    }\r\n                </StyledMain>\r\n            </Page>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nconst StyledMain = styled.div`\r\n    margin-top: 0px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    @media (max-width: 768px) {\r\n        width: 80%;\r\n        flex-flow: column nowrap;\r\n        align-items: center;\r\n        flex: 1;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n    align-items: center;\r\n    padding-top: 36px;\r\n    padding-bottom: 20px;\r\n    font-size: 30px;\r\n    color: ${props => props.theme.color.grey[100]};\r\n    font-weight: 600;\r\n`\r\n\r\nconst StyledHeaderPrice = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-top: 20px;\r\n    padding-bottom: 16px;\r\n    font-size: 30px;\r\n    color: ${props => props.theme.color.grey[100]};\r\n`\r\n\r\nconst StyledPrice = styled.div`\r\n    align-items: center;\r\n    padding: 5px 20px 16px;\r\n    font-size: 30px;\r\n    color: #08F3CB;\r\n    font-weight: 600;\r\n`\r\n\r\n\r\nexport default Exchange;\r\n"],"sourceRoot":""}