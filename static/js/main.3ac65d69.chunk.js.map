{"version":3,"sources":["components/Loadable/Loadable.tsx","hooks/useIsWindowVisible.ts","state/application/actions.ts","config.ts","titi-core-contracts/config.ts","utils/provider.ts","titi-core-contracts/ether-utils.ts","state/application/updater.ts","hooks/useDebounce.ts","state/transactions/actions.ts","state/transactions/updater.tsx","state/application/hooks.ts","state/Updaters.tsx","titi-core-contracts/ERC20.ts","titi-core-contracts/TiTiCoreContracts.tsx","contexts/TiTiProvider/TiTiProvider.tsx","contexts/Modals/Modals.tsx","components/Column/index.tsx","components/Row/index.tsx","components/Popups/TransactionPopup.tsx","components/Popups/ErrorPopup.tsx","components/Popups/PopupItem.tsx","components/Popups/index.tsx","state/transactions/reducer.ts","state/application/reducer.ts","state/index.ts","theme/colors.ts","theme/index.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["loader","Loadable","loading","StyledLoadableWrapper","type","color","height","width","styled","div","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","updateBlockNumber","createAction","toggleWalletModal","toggleSettingsMenu","addPopup","removePopup","configurations","production","chainId","etherscanUrl","defaultProvider","deployments","require","externalTokens","DAI","USDC","USDT","BUSD","BAC","MIC","UNI","SUSHI","COMP","AAVE","WETH","YFI","preswapLaunchDate","Date","refreshInterval","refreshNFTInterval","gasLimitMultiplier","development","HayekPlate","defaultEthereumConfig","testing","autoGasMultiplier","defaultConfirmations","defaultGas","defaultGasPrice","ethereumNodeTimeout","getDefaultProvider","ethers","providers","Web3Provider","endpoint","config","ethConfig","Object","assign","includes","Web3","WebsocketProvider","HttpProvider","timeout","web3ProviderFrom","Updater","useWallet","ethereum","dispatch","useDispatch","windowVisible","useState","focused","setFocused","listener","useCallback","useEffect","addEventListener","removeEventListener","useIsWindowVisible","blockNumber","state","setState","blockNumberCallback","Math","max","provider","getBlockNumber","then","catch","error","console","on","removeListener","debouncedState","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","lastBlockNumber","useSelector","application","useBlockNumber","transactions","content","key","useAddPopup","keys","filter","hash","tx","receipt","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","getTime","addedTime","shouldCheck","forEach","getTransactionReceipt","blockHash","contractAddress","from","status","to","transactionHash","transactionIndex","txn","success","summary","Updaters","ERC20","address","symbol","decimal","contract","this","Contract","ABI","signerOrProvider","totalSupply","account","balanceOf","recipient","amount","transfer","owner","spender","allowance","approve","operator","approved","setApprovalForAll","isApprovedForAll","sender","transferFro","balance","formatUnits","supply","Number","toFixed","estimateGas","name","anonymous","inputs","indexed","internalType","constant","outputs","payable","stateMutability","TiTiCoreContracts","cfg","myAccount","signer","contracts","busdBNB","beiBibe","TITI","TTG","entries","deployment","abi","IUniswapV2PairABI","newProvider","getSigner","connect","tokens","values","log","gas","multiplied","floor","toNumber","gasLimit","BigNumber","genesisGroup","totalCommitBN","userCommitBN","totalCommittedFGEN","totalPreswapBN","committedFGEN","userPreswapBN","getBalance","utils","formatEther","getAmountsToRedeem","redeemAmountBN","decimals","pow","beiBalance","bibeBalance","uniswapIncentive","getReserves","tokenReserve","_reserve0","_reserve1","coreController","mmfConfigs","getTimeWeight","timeWeight","totoSupply","lpTokenSupply","userBalance","stakedBalance","earned","rainyDayFund","add","mul","getRewardForDuration","rewardForDuration","stakedLpSupply","rewardPerToken","starttime","marketMakerFund","totalReward","sub","reserves","feiReserves","tokenReserves","tokenContract","ready","dai","Token","token","Fetcher","fetchPairData","daiToToken","priceInDAI","Route","midPrice","toSignificant","buyTITI","gasOptions","sellTITI","stake","exit","getReward","reorders","Context","createContext","beiCash","TiTiProvider","children","setBEICash","unlockWallet","newBeiCash","BEICash","Provider","onPresent","onDismiss","StyledModalWrapper","StyledModalBackdrop","Modals","isOpen","setIsOpen","setContent","handlePresent","modalContent","handleDismiss","undefined","onClick","React","isValidElement","cloneElement","Column","AutoColumn","gap","justify","Row","align","padding","border","borderRadius","AutoRow","RowNoFlex","TransactionPopup","theme","useContext","ThemeContext","style","paddingRight","teal","size","StyledPopupDesc","slice","StyledLink","href","span","props","grey","a","ErrorPopup","message","stack","copyErrorDetails","navigator","clipboard","writeText","StyledClose","X","Popup","Fader","AnimatedFader","animated","PopupItem","removeAfterMs","popKey","useRemovePopup","removeThisPopup","popupContent","faderStyle","useSpring","duration","text2","MobilePopupWrapper","MobilePopupInner","FixedPopupColumn","Popups","activePopups","list","popupList","useMemo","item","show","useActivePopups","map","length","reverse","now","createReducer","builder","addCase","payload","approval","approvalForAll","Error","txs","confirmedTime","walletModalOpen","settingsMenuOpen","action","popup","concat","nanoid","p","PERSISTED_KEYS","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","red","100","200","300","500","400","600","700","800","900","black","yellow","orange","blue","purple","green","primary","light","main","secondary","white","siteWidth","spacing","1","2","3","4","5","6","7","8","stickyTopBarBG","topBarBG","stickyTopBarSize","topBarSize","downBarSize","Home","Providers","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.3ac65d69.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\n\r\nexport default (loader: () => Promise<any>) => {\r\n    return Loadable({\r\n        loader,\r\n        loading() {\r\n            return (\r\n                <StyledLoadableWrapper>\r\n                    <Loader type=\"Bars\" color=\"#08F3CB\" height={80} width={80} />\r\n                </StyledLoadableWrapper>\r\n            );\r\n        },\r\n    });\r\n}\r\n\r\nconst StyledLoadableWrapper = styled.div`\r\n    width:100%;\r\n    height:100vh;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    background-color:rgba(0,0,0,0.8);\r\n`","import { useCallback, useEffect, useState } from 'react';\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document;\r\n\r\nfunction isWindowVisible() {\r\n    return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden';\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible(): boolean {\r\n    const [focused, setFocused] = useState<boolean>(isWindowVisible());\r\n    const listener = useCallback(() => {\r\n        setFocused(isWindowVisible());\r\n    }, [setFocused]);\r\n\r\n    useEffect(() => {\r\n        if (!VISIBILITY_STATE_SUPPORTED) return undefined;\r\n\r\n        document.addEventListener('visibilitychange', listener);\r\n        return () => {\r\n            document.removeEventListener('visibilitychange', listener);\r\n        };\r\n    }, [listener]);\r\n\r\n    return focused;\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport type PopupContent = {\r\n    txn?: {\r\n        hash: string;\r\n        success: boolean;\r\n        summary?: string;\r\n    };\r\n    error?: {\r\n        message: string;\r\n        stack: string;\r\n    };\r\n};\r\n\r\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>(\r\n    'app/updateBlockNumber',\r\n);\r\n\r\nexport const toggleWalletModal = createAction<void>('app/toggleWalletModal');\r\n\r\nexport const toggleSettingsMenu = createAction<void>('app/toggleSettingsMenu');\r\n\r\nexport const addPopup = createAction<{\r\n    key?: string;\r\n    removeAfterMs?: number | null;\r\n    content: PopupContent;\r\n}>('app/addPopup');\r\n\r\nexport const removePopup = createAction<{ key: string }>('app/removePopup');\r\n","import { Configuration } from './titi-core-contracts/config';\r\n\r\nconst configurations: { [env: string]: Configuration } = {\r\n    production: {\r\n        chainId: 15,\r\n        etherscanUrl: 'https://etherscan.io',\r\n        defaultProvider: 'https://127.0.0.1:8545',\r\n        deployments: require('./titi-core-contracts/deployments/deployments.mainnet.json'),\r\n        externalTokens: {\r\n            DAI: ['0x6B175474E89094C44Da98b954EedeAC495271d0F', 18],\r\n            USDC: ['0xFD18A1cd776A95563EDd69978586314531611Cbd', 18],\r\n            USDT: ['0xdAC17F958D2ee523a2206206994597C13D831ec7', 6],\r\n            BUSD: ['0x4Fabb145d64652a948d72533023f6E7A623C7C53', 18],\r\n            BAC: ['0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a', 18],\r\n            MIC: ['0x368B3a58B5f49392e5C9E4C998cb0bB966752E51', 18],\r\n            UNI: ['0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', 18],\r\n            SUSHI: ['0x6B3595068778DD592e39A122f4f5a5cF09C90fE2', 18],\r\n            COMP: ['0xc00e94Cb662C3520282E6f5717214004A7f26888', 18],\r\n            AAVE: ['0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', 18],\r\n            WETH: ['0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18],\r\n            YFI: ['0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e', 18],\r\n            'BUSD-BNB-UNI-LPv2': ['0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc', 18],\r\n            'BEI-BIBE-UNI-LPv2': ['0x9928e4046d7c6513326cCeA028cD3e7a91c7590A', 18],\r\n        },\r\n        preswapLaunchDate: new Date('2021-04-13T12:00:00Z'),\r\n        refreshInterval: 10000,\r\n        refreshNFTInterval: 100000,\r\n        gasLimitMultiplier: 1.1,\r\n    },\r\n    development: {\r\n        chainId: 15,\r\n        etherscanUrl: 'https://etherscan.io',\r\n        defaultProvider: 'http://127.0.0.1:8545',\r\n        deployments: require('./titi-core-contracts/deployments/deployments.dev.json'),\r\n        externalTokens: {\r\n            DAI: ['0x6B175474E89094C44Da98b954EedeAC495271d0F', 18],\r\n            USDC: ['0xFD18A1cd776A95563EDd69978586314531611Cbd', 18],\r\n            USDT: ['0xdAC17F958D2ee523a2206206994597C13D831ec7', 6],\r\n            BUSD: ['0x4Fabb145d64652a948d72533023f6E7A623C7C53', 18],\r\n            BAC: ['0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a', 18],\r\n            MIC: ['0x368B3a58B5f49392e5C9E4C998cb0bB966752E51', 18],\r\n            UNI: ['0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', 18],\r\n            SUSHI: ['0x6B3595068778DD592e39A122f4f5a5cF09C90fE2', 18],\r\n            COMP: ['0xc00e94Cb662C3520282E6f5717214004A7f26888', 18],\r\n            AAVE: ['0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', 18],\r\n            WETH: ['0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18],\r\n            YFI: ['0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e', 18],\r\n            HayekPlate: ['0xB4A969380c088F8b33650016d2b0ebEC4E61c8e6', 18],\r\n            'BUSD-BNB-UNI-LPv2': ['0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc', 18],\r\n            'BEI-BIBE-UNI-LPv2': ['0x9928e4046d7c6513326cCeA028cD3e7a91c7590A', 18],\r\n        },\r\n        preswapLaunchDate: new Date('2021-04-13T12:00:00Z'),\r\n        refreshInterval: 30000,\r\n        refreshNFTInterval: 100000,\r\n        gasLimitMultiplier: 1.7,\r\n    },\r\n};\r\n\r\nexport default configurations[process.env.NODE_ENV || \"development\"];\r\n","import { Deployments } from './deployments';\r\nimport { ChainId } from '@uniswap/sdk';\r\n\r\nexport type Configuration = {\r\n    chainId: ChainId,\r\n    etherscanUrl: string,\r\n    defaultProvider: string,\r\n    deployments: Deployments,\r\n    externalTokens: {[contractName: string]: [string, number]};\r\n    config?: EthereumConfig,\r\n    preswapLaunchDate: Date,\r\n    refreshInterval: number;\r\n    refreshNFTInterval: number,\r\n    gasLimitMultiplier: number;\r\n};\r\n\r\nexport type EthereumConfig = {\r\n    testing: boolean,\r\n    autoGasMultiplier: number,\r\n    defaultConfirmations: number,\r\n    defaultGas: string,\r\n    defaultGasPrice: string,\r\n    ethereumNodeTimeout: number,\r\n};\r\n\r\nexport const defaultEthereumConfig = {\r\n    testing: false,\r\n    autoGasMultiplier: 1.5,\r\n    defaultConfirmations: 1,\r\n    defaultGas: \"6000000\",\r\n    defaultGasPrice: \"1000000000000\",\r\n    ethereumNodeTimeout: 10000,\r\n};\r\n","import { ethers } from 'ethers';\r\nimport config from '../config';\r\nimport { web3ProviderFrom } from '../titi-core-contracts/ether-utils';\r\n\r\nexport function getDefaultProvider(): ethers.providers.Web3Provider {\r\n    return new ethers.providers.Web3Provider(\r\n        web3ProviderFrom(config.defaultProvider),\r\n        config.chainId,\r\n    )\r\n}\r\n","import Web3 from 'web3';\r\nimport { defaultEthereumConfig, EthereumConfig } from './config';\r\nimport { formatUnits, parseUnits } from 'ethers/lib/utils';\r\nimport { BigNumber } from 'ethers';\r\n\r\nexport function web3ProviderFrom(endpoint: string, config?: EthereumConfig): any {\r\n    const ethConfig = Object.assign(defaultEthereumConfig, config || {});\r\n\r\n    const providerClass = endpoint.includes('wss')\r\n        ? Web3.providers.WebsocketProvider\r\n        : Web3.providers.HttpProvider;\r\n\r\n    return new providerClass(endpoint, {\r\n        timeout: ethConfig.ethereumNodeTimeout,\r\n    });\r\n}\r\n\r\nexport function balanceToDecimal(s: string): string {\r\n    return formatUnits(s);\r\n}\r\n\r\nexport function decimalToBalance(d: string | number, decimals = 18): BigNumber {\r\n    return parseUnits(String(d), decimals);\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useWallet } from 'use-wallet';\r\nimport useDebounce from '../../hooks/useDebounce';\r\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible';\r\nimport { updateBlockNumber } from './actions';\r\nimport { getDefaultProvider } from '../../utils/provider';\r\n\r\nexport default function Updater(): null {\r\n    const { ethereum, chainId } = useWallet();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const windowVisible = useIsWindowVisible();\r\n\r\n    const [state, setState] = useState<{\r\n        chainId: number | undefined;\r\n        blockNumber: number | null;\r\n    }>({\r\n        chainId,\r\n        blockNumber: null,\r\n    });\r\n\r\n    const blockNumberCallback = useCallback(\r\n        (blockNumber: number) => {\r\n            setState((state) => {\r\n                if (chainId === state.chainId) {\r\n                    if (typeof state.blockNumber !== 'number') return { chainId, blockNumber };\r\n                    return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) };\r\n                }\r\n                return state;\r\n            });\r\n        },\r\n        [chainId, setState],\r\n    );\r\n\r\n    // attach/detach listeners\r\n    useEffect(() => {\r\n        if (!ethereum || !chainId || !windowVisible) return undefined;\r\n        setState({ chainId, blockNumber: null });\r\n\r\n        const provider = getDefaultProvider();\r\n        provider\r\n            .getBlockNumber()\r\n            .then(blockNumberCallback)\r\n            .catch((error) =>\r\n                console.error(`Failed to get block number for chainId: ${chainId}`, error),\r\n            );\r\n\r\n        provider.on('block', blockNumberCallback)\r\n        return () => provider.removeListener('block', blockNumberCallback);\r\n    }, [dispatch, chainId, ethereum, blockNumberCallback, windowVisible]);\r\n\r\n    const debouncedState = useDebounce(state, 100);\r\n\r\n    useEffect(() => {\r\n        if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return;\r\n        dispatch(\r\n            updateBlockNumber({\r\n                chainId: debouncedState.chainId,\r\n                blockNumber: debouncedState.blockNumber,\r\n            }),\r\n        );\r\n    }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId]);\r\n\r\n    return null;\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n    const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n    useEffect(() => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value)\r\n        }, delay)\r\n\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n            clearTimeout(handler)\r\n        }\r\n    }, [value, delay])\r\n\r\n    return debouncedValue\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { ChainId } from '@uniswap/sdk';\r\n\r\nexport interface SerializableTransactionReceipt {\r\n    to: string;\r\n    from: string;\r\n    contractAddress: string;\r\n    transactionIndex: number;\r\n    blockHash: string;\r\n    transactionHash: string;\r\n    blockNumber: number;\r\n    status?: number;\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n    chainId: ChainId;\r\n    hash: string;\r\n    from: string;\r\n    approval?: { tokenAddress: string; spender: string };\r\n    approvalForAll?: { tokenAddress: string; spender: string; approved: boolean };\r\n    summary?: string;\r\n}>('transactions/addTransaction');\r\n\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>(\r\n    'transactions/clearAllTransactions',\r\n);\r\n\r\nexport const finalizeTransaction = createAction<{\r\n    chainId: ChainId;\r\n    hash: string;\r\n    receipt: SerializableTransactionReceipt;\r\n}>('transactions/finalizeTransaction');\r\n\r\nexport const checkedTransaction = createAction<{\r\n    chainId: ChainId;\r\n    hash: string;\r\n    blockNumber: number;\r\n}>('transactions/checkedTransaction');\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useWallet } from 'use-wallet';\r\nimport { useAddPopup, useBlockNumber } from '../application/hooks';\r\nimport { AppDispatch, AppState } from '../index';\r\nimport { checkedTransaction, finalizeTransaction } from './actions';\r\nimport { getDefaultProvider } from '../../utils/provider';\r\n\r\nexport function shouldCheck(\r\n    lastBlockNumber: number,\r\n    tx: { addedTime: number; receipt?: {}; lastCheckedBlockNumber?: number },\r\n): boolean {\r\n    if (tx.receipt) return false;\r\n    if (!tx.lastCheckedBlockNumber) return true;\r\n    const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber;\r\n    if (blocksSinceCheck < 1) return false;\r\n    const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60;\r\n    if (minutesPending > 60) {\r\n        // every 10 blocks if pending for longer than an hour\r\n        return blocksSinceCheck > 9;\r\n    } else if (minutesPending > 5) {\r\n        // every 3 blocks if pending more than 5 minutes\r\n        return blocksSinceCheck > 2;\r\n    } else {\r\n        // otherwise every block\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default function Updater(): null {\r\n    const { chainId, ethereum } = useWallet();\r\n\r\n    const lastBlockNumber = useBlockNumber();\r\n\r\n    const dispatch = useDispatch<AppDispatch>();\r\n    const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\r\n\r\n    const transactions = chainId ? state[chainId] ?? {} : {};\r\n\r\n    // show popup on confirm\r\n    const addPopup = useAddPopup();\r\n\r\n    useEffect(() => {\r\n        if (!chainId || !ethereum || !lastBlockNumber) {\r\n            return;\r\n        }\r\n\r\n        const provider = getDefaultProvider();\r\n        Object.keys(transactions)\r\n            .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\r\n            .forEach((hash) => {\r\n                provider\r\n                    .getTransactionReceipt(hash)\r\n                    .then((receipt) => {\r\n                        if (receipt) {\r\n                            dispatch(\r\n                                finalizeTransaction({\r\n                                    chainId,\r\n                                    hash,\r\n                                    receipt: {\r\n                                        blockHash: receipt.blockHash,\r\n                                        blockNumber: receipt.blockNumber,\r\n                                        contractAddress: receipt.contractAddress,\r\n                                        from: receipt.from,\r\n                                        status: receipt.status,\r\n                                        to: receipt.to,\r\n                                        transactionHash: receipt.transactionHash,\r\n                                        transactionIndex: receipt.transactionIndex,\r\n                                    },\r\n                                }),\r\n                            );\r\n\r\n                            addPopup(\r\n                                {\r\n                                    txn: {\r\n                                        hash,\r\n                                        success: receipt.status === 1,\r\n                                        summary: transactions[hash]?.summary,\r\n                                    },\r\n                                },\r\n                                hash,\r\n                            );\r\n                        } else {\r\n                            dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }));\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(`failed to check transaction hash: ${hash}`, error);\r\n                    });\r\n            });\r\n    }, [chainId, ethereum, transactions, lastBlockNumber, dispatch, addPopup]);\r\n\r\n    return null;\r\n}\r\n","import { useCallback, useMemo } from 'react';\r\nimport {\r\n    addPopup,\r\n    PopupContent,\r\n    removePopup,\r\n    toggleWalletModal,\r\n    toggleSettingsMenu,\r\n} from './actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../index';\r\nimport { useWallet } from 'use-wallet';\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n    const { chainId } = useWallet();\r\n    return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1]);\r\n}\r\n\r\nexport function useWalletModalOpen(): boolean {\r\n    return useSelector((state: AppState) => state.application.walletModalOpen);\r\n}\r\n\r\nexport function useWalletModalToggle(): () => void {\r\n    const dispatch = useDispatch();\r\n    return useCallback(() => dispatch(toggleWalletModal()), [dispatch]);\r\n}\r\n\r\nexport function useSettingsMenuOpen(): boolean {\r\n    return useSelector((state: AppState) => state.application.settingsMenuOpen);\r\n}\r\n\r\nexport function useToggleSettingsMenu(): () => void {\r\n    const dispatch = useDispatch();\r\n    return useCallback(() => dispatch(toggleSettingsMenu()), [dispatch]);\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\r\n    const dispatch = useDispatch();\r\n\r\n    return useCallback(\r\n        (content: PopupContent, key?: string) => {\r\n            dispatch(addPopup({ content, key }));\r\n        },\r\n        [dispatch],\r\n    );\r\n}\r\n\r\n// returns a function that allows removing a popup via its key\r\nexport function useRemovePopup(): (key: string) => void {\r\n    const dispatch = useDispatch();\r\n    return useCallback(\r\n        (key: string) => {\r\n            dispatch(removePopup({ key }));\r\n        },\r\n        [dispatch],\r\n    );\r\n}\r\n\r\n// get the list of active popups\r\nexport function useActivePopups(): AppState['application']['popupList'] {\r\n    const list = useSelector((state: AppState) => state.application.popupList);\r\n    return useMemo(() => list.filter((item) => item.show), [list]);\r\n}\r\n","import React from 'react';\r\nimport ApplicationUpdater from './application/updater'\r\nimport TransactionUpdater from './transactions/updater'\r\n\r\nconst Updaters = () => (\r\n    <>\r\n        <ApplicationUpdater />\r\n        <TransactionUpdater />\r\n    </>\r\n);\r\n\r\nexport default Updaters;\r\n","import { BigNumber, Contract } from 'ethers';\r\nimport { Signer } from '@ethersproject/abstract-signer';\r\nimport { Provider } from '@ethersproject/abstract-provider';\r\nimport { TransactionResponse } from '@ethersproject/providers';\r\nimport { formatUnits } from 'ethers/lib/utils';\r\n\r\nclass ERC20 {\r\n    private contract: Contract;\r\n\r\n    address: string;\r\n    symbol: string;\r\n    decimal: number;\r\n\r\n    constructor(address: string, provider: Signer | Provider, symbol: string, decimal = 18) {\r\n        this.contract = new Contract(address, ABI, provider);\r\n        this.address = address;\r\n        this.symbol = symbol;\r\n        this.decimal = decimal;\r\n    }\r\n\r\n    connect(signerOrProvider: Signer | Provider) {\r\n        this.contract = new Contract(this.address, ABI, signerOrProvider);\r\n    }\r\n\r\n    get estimateGas() {\r\n        return this.contract.estimateGas;\r\n    }\r\n\r\n    totalSupply(): Promise<BigNumber> {\r\n        return this.contract.totalSupply();\r\n    }\r\n\r\n    balanceOf(account: string): Promise<BigNumber> {\r\n        return this.contract.balanceOf(account);\r\n    }\r\n\r\n    transfer(recipient: string, amount: BigNumber): Promise<TransactionResponse> {\r\n        return this.contract.transfer(recipient, amount);\r\n    }\r\n\r\n    allowance(owner: string, spender: string): Promise<BigNumber> {\r\n        return this.contract.allowance(owner, spender);\r\n    }\r\n\r\n    approve(spender: string, amount: BigNumber): Promise<TransactionResponse> {\r\n        return this.contract.approve(spender, amount);\r\n    }\r\n\r\n    setApprovalForAll(operator: string, approved: boolean): Promise<TransactionResponse> {\r\n        return this.contract.setApprovalForAll(operator, approved);\r\n    }\r\n\r\n    isApprovedForAll(owner: string, operator: string): Promise<boolean> {\r\n        return this.contract.isApprovedForAll(owner, operator);\r\n    }\r\n\r\n    transferFrom(\r\n        sender: string,\r\n        recipient: string,\r\n        amount: BigNumber,\r\n    ): Promise<TransactionResponse> {\r\n        return this.contract.transferFro (sender, recipient, amount);\r\n    }\r\n\r\n    async displayedBalanceOf(account: string): Promise<string> {\r\n        const balance = await this.balanceOf(account);\r\n        return formatUnits(balance, this.decimal);\r\n    }\r\n\r\n    async displayedTotalSupply(): Promise<string> {\r\n        const supply = await this.totalSupply();\r\n        return Number(formatUnits(supply, this.decimal)).toFixed(0);\r\n    }}\r\n\r\nexport default ERC20;\r\n\r\nconst ABI = [\r\n    {\r\n        name: 'Approval',\r\n        type: 'event',\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: true, internalType: 'address', name: 'owner', type: 'address' },\r\n            { indexed: true, internalType: 'address', name: 'spender', type: 'address' },\r\n            { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },\r\n        ],\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\"\r\n            },\r\n            {\r\n                indexed: true,\r\n                internalType: \"address\",\r\n                name: \"operator\",\r\n                type: \"address\"\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"bool\",\r\n                name: \"approved\",\r\n                type: \"bool\"\r\n            }\r\n        ],\r\n        name: \"ApprovalForAll\",\r\n        type: \"event\"\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            { indexed: true, internalType: 'address', name: 'from', type: 'address' },\r\n            { indexed: true, internalType: 'address', name: 'to', type: 'address' },\r\n            { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },\r\n        ],\r\n        name: 'Transfer',\r\n        type: 'event',\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: 'totalSupply',\r\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        payable: false,\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\r\n        name: 'balanceOf',\r\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        payable: false,\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"owner\",\r\n                type: \"address\"\r\n            },\r\n            {\r\n                internalType: \"address\",\r\n                name: \"operator\",\r\n                type: \"address\"\r\n            }\r\n        ],\r\n        name: \"isApprovedForAll\",\r\n        outputs: [\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"\",\r\n                type: \"bool\"\r\n            }\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n        constant: true\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n            { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n        ],\r\n        name: 'transfer',\r\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n        payable: false,\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"operator\",\r\n                type: \"address\"\r\n            },\r\n            {\r\n                internalType: \"bool\",\r\n                name: \"approved\",\r\n                type: \"bool\"\r\n            }\r\n        ],\r\n        name: \"setApprovalForAll\",\r\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\"\r\n    },\r\n    {\r\n        constant: true,\r\n        inputs: [\r\n            { internalType: 'address', name: 'owner', type: 'address' },\r\n            { internalType: 'address', name: 'spender', type: 'address' },\r\n        ],\r\n        name: 'allowance',\r\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n        payable: false,\r\n        stateMutability: 'view',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: 'address', name: 'spender', type: 'address' },\r\n            { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n        ],\r\n        name: 'approve',\r\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n        payable: false,\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n    {\r\n        constant: false,\r\n        inputs: [\r\n            { internalType: 'address', name: 'sender', type: 'address' },\r\n            { internalType: 'address', name: 'recipient', type: 'address' },\r\n            { internalType: 'uint256', name: 'amount', type: 'uint256' },\r\n        ],\r\n        name: 'transferFrom',\r\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n        payable: false,\r\n        stateMutability: 'nonpayable',\r\n        type: 'function',\r\n    },\r\n];\r\n","import {Fetcher, Route, Token} from '@uniswap/sdk';\r\nimport {Configuration} from './config';\r\nimport {BigNumber, Contract, ethers, Overrides} from 'ethers';\r\nimport ERC20 from './ERC20';\r\nimport {getDefaultProvider} from '../utils/provider';\r\nimport IUniswapV2PairABI from './IUniswapV2Pair.abi.json';\r\nimport {TransactionResponse} from \"@ethersproject/providers\";\r\n\r\n/**\r\n * An API module of BEI Cash contracts.\r\n * All contract-interacting domain logic should be defined in here.\r\n */\r\nexport class TiTiCoreContracts {\r\n    myAccount: string;\r\n    provider: ethers.providers.Web3Provider;\r\n    signer?: ethers.Signer;\r\n    config: Configuration;\r\n    contracts: { [name: string]: Contract };\r\n    externalTokens: { [name: string]: ERC20 };\r\n    busdBNB: Contract;\r\n    beiBibe: Contract;\r\n    TITI: ERC20;\r\n    TTG: ERC20;\r\n\r\n    constructor(cfg: Configuration) {\r\n        const { deployments, externalTokens } = cfg;\r\n        const provider = getDefaultProvider();\r\n\r\n        // loads contracts from deployments\r\n        this.contracts = {};\r\n        for (const [name, deployment] of Object.entries(deployments)) {\r\n            this.contracts[name] = new Contract(deployment.address, deployment.abi, provider);\r\n        }\r\n        this.externalTokens = {};\r\n        for (const [symbol, [address, decimal]] of Object.entries(externalTokens)) {\r\n            this.externalTokens[symbol] = new ERC20(address, provider, symbol, decimal); // TODO: add decimal\r\n        }\r\n        this.TITI = new ERC20(deployments.TITI.address, provider, 'TITI');\r\n        this.TTG = new ERC20(deployments.TTG.address, provider, 'TTG');\r\n\r\n        // Uniswap V2 Pair\r\n        this.busdBNB = new Contract(\r\n            externalTokens['BUSD-BNB-UNI-LPv2'][0],\r\n            IUniswapV2PairABI,\r\n            provider,\r\n        );\r\n\r\n        // Uniswap V2 Pair\r\n        this.beiBibe = new Contract(\r\n            externalTokens['BEI-BIBE-UNI-LPv2'][0],\r\n            IUniswapV2PairABI,\r\n            provider,\r\n        );\r\n\r\n        this.config = cfg;\r\n        this.provider = provider;\r\n    }\r\n\r\n    /**\r\n     * @param provider From an unlocked wallet. (e.g. Metamask)\r\n     * @param account An address of unlocked wallet account.\r\n     */\r\n    unlockWallet(provider: any, account: string) {\r\n        const newProvider = new ethers.providers.Web3Provider(provider, this.config.chainId);\r\n\r\n        this.signer = newProvider.getSigner(0);\r\n        this.myAccount = account;\r\n        for (const [name, contract] of Object.entries(this.contracts)) {\r\n            this.contracts[name] = contract.connect(this.signer);\r\n        }\r\n        const tokens = [this.TITI, this.TTG, ...Object.values(this.externalTokens)];\r\n        for (const token of tokens) {\r\n            token.connect(this.signer);\r\n        }\r\n        this.busdBNB = this.busdBNB.connect(this.signer);\r\n        console.log(`🔓 Wallet is unlocked. Welcome, ${account}!`);\r\n    }\r\n\r\n    get isUnlocked(): boolean {\r\n        return !!this.myAccount;\r\n    }\r\n\r\n    gasOptions(gas: BigNumber): Overrides {\r\n        const multiplied = Math.floor(gas.toNumber() * this.config.gasLimitMultiplier);\r\n        console.log(`⛽️ Gas multiplied: ${gas} -> ${multiplied}`);\r\n        return {\r\n            gasLimit: BigNumber.from(multiplied),\r\n        };\r\n    }\r\n\r\n    async getTotalCommit(): Promise<number> {\r\n        const genesisGroup = this.contracts['GenesisGroup'];\r\n        const totalCommitBN = await genesisGroup.totalSupply();\r\n\r\n        return Number(totalCommitBN / (10 ** 18));\r\n    }\r\n\r\n    async getUserCommit(account = this.myAccount): Promise<number> {\r\n        const genesisGroup = this.contracts['GenesisGroup'];\r\n        if (!account) {\r\n            return 0;\r\n        }\r\n        const userCommitBN = await genesisGroup.balanceOf(account);\r\n        return Number(userCommitBN / (10 ** 18));\r\n    }\r\n\r\n    async getTotalPreswap(): Promise<number> {\r\n        const genesisGroup = this.contracts['GenesisGroup'];\r\n        const totalPreswapBN = await genesisGroup.totalCommittedFGEN();\r\n        return Number(totalPreswapBN / (10 ** 18));\r\n    }\r\n\r\n    async getUserPreswap(account = this.myAccount): Promise<number> {\r\n        const genesisGroup = this.contracts['GenesisGroup'];\r\n        if (!account) {\r\n            return 0;\r\n        }\r\n        const userPreswapBN = await genesisGroup.committedFGEN(account);\r\n        return Number(userPreswapBN / (10 ** 18));\r\n    }\r\n\r\n    async getUserBNBBalance(account = this.myAccount): Promise<number> {\r\n        if (!account) {\r\n            return 0;\r\n        }\r\n        const balance = await this.provider.getBalance(account);\r\n        console.log(account + ':' + ethers.utils.formatEther(balance));\r\n        return Number(ethers.utils.formatEther(balance));\r\n    }\r\n\r\n    async getRedeemAmount(account = this.myAccount): Promise<number[]> {\r\n        const genesisGroup = this.contracts['GenesisGroup'];\r\n        if (!account) {\r\n            return [0,0];\r\n        }\r\n        const redeemAmountBN = await genesisGroup.getAmountsToRedeem(account);\r\n        return [Number(redeemAmountBN[0] / (10 ** 18)), Number((redeemAmountBN[1] + redeemAmountBN[2]) / (10 ** 18))];\r\n    }\r\n\r\n    async getUSDCBalance(account = this.myAccount): Promise<number> {\r\n        if (!account) {\r\n            return 0;\r\n        }\r\n        const decimals = BigNumber.from(10).pow(15);\r\n        const beiBalance = await this.externalTokens[\"USDC\"].balanceOf(account);\r\n        return beiBalance.div(decimals).toNumber() / 1000;\r\n    }\r\n\r\n    async getTITIBalance(account = this.myAccount): Promise<number> {\r\n        if (!account) {\r\n            return 0;\r\n        }\r\n        const decimals = BigNumber.from(10).pow(15);\r\n        const beiBalance = await this.TITI.balanceOf(account);\r\n        return beiBalance.div(decimals).toNumber() / 1000;\r\n    }\r\n\r\n    async getBIBEBalance(account = this.myAccount): Promise<number> {\r\n        if (!account) {\r\n            return 0;\r\n        }\r\n        const bibeBalance = await this.TTG.balanceOf(account);\r\n        return Number(bibeBalance.toNumber() / (10 ** 18));\r\n    }\r\n\r\n    async getTITIUSDCReserves(): Promise<number[]> {\r\n        const uniswapIncentive = this.contracts['TitiPairSwap'];\r\n        const tokenReserve = await uniswapIncentive.getReserves();\r\n        return [tokenReserve._reserve0.div(BigNumber.from(10).pow(14)) / (10000),\r\n            tokenReserve._reserve1.div(BigNumber.from(10).pow(14)) / (10000)];\r\n    }\r\n\r\n    async getMMF(): Promise<number> {\r\n        const coreController = this.contracts['CoreController'];\r\n        const mmfConfigs = await coreController.mmfConfigs(this.contracts['MarketMakerFund'].address);\r\n        console.log(mmfConfigs)\r\n        return mmfConfigs.balance.div(BigNumber.from(10).pow(14)) / (10000);\r\n    }\r\n\r\n    async getTimeWeight(): Promise<number> {\r\n        const uniswapIncentive = this.contracts['UniswapIncentive'];\r\n        const timeWeight = await uniswapIncentive.getTimeWeight();\r\n        return Number(timeWeight / (10 ** 5));\r\n    }\r\n\r\n    async getPegPrice(): Promise<number> {\r\n        const uniswapIncentive = this.contracts['TitiPairSwap'];\r\n        const tokenReserve = await uniswapIncentive.getReserves();\r\n        return Number(tokenReserve._reserve0 / tokenReserve._reserve1);\r\n    }\r\n\r\n    async getTITISupply(): Promise<number> {\r\n        const decimals = BigNumber.from(10).pow(14);\r\n        const totoSupply = await this.TITI.totalSupply();\r\n        return totoSupply.div(decimals).toNumber() / 10000;\r\n    }\r\n\r\n    async getBNBPrice(): Promise<number> {\r\n        const tokenReserve = await this.busdBNB.getReserves();\r\n        return Number(tokenReserve._reserve0 / tokenReserve._reserve1 * (10 ** 12));\r\n    }\r\n\r\n    async getLPTokenSupply(): Promise<number> {\r\n        const lpTokenSupply = await this.beiBibe.totalSupply();\r\n        return Number(lpTokenSupply / (10 ** 18));\r\n    }\r\n\r\n    async getUserLPTokenBalance(account=this.myAccount): Promise<number> {\r\n        if (!account) {\r\n            return 0;\r\n        }\r\n        const userBalance = await this.beiBibe.balanceOf(account);\r\n        return Number(userBalance / (10 ** 18));\r\n    }\r\n\r\n    async getStakedBalance(account=this.myAccount): Promise<number> {\r\n        if (!account) {\r\n            return 0;\r\n        }\r\n        const stakedBalance = await this.contracts['MarketMakerFund'].balanceOf(account);\r\n        console.log(\"stakedBalance\", stakedBalance);\r\n        const decimals = BigNumber.from(10).pow(14);\r\n        return (stakedBalance.div(decimals).toNumber() / 10000);\r\n    }\r\n\r\n    async getRedeemableTribeRewards(account=this.myAccount): Promise<number> {\r\n        if (!account) {\r\n            return 0;\r\n        }\r\n        const earned = await this.contracts['MarketMakerFund'].earned(account);\r\n        const rainyDayFund = await this.contracts['PAVVault'].rainyDayFund();\r\n        const stakedBalance = await this.contracts['MarketMakerFund'].balanceOf(account);\r\n        const totalSupply = await this.contracts['MarketMakerFund'].totalSupply();\r\n        return Number(earned.add(rainyDayFund.mul(stakedBalance).div(totalSupply)) / (10 ** 18));\r\n    }\r\n\r\n    async getRewardForDuration(): Promise<number> {\r\n        const rewardForDuration = await this.contracts['MarketMakerFund'].getRewardForDuration();\r\n        return Number(rewardForDuration / (10 ** 18));\r\n    }\r\n\r\n    async getStakedLpSupply(): Promise<number> {\r\n        const stakedLpSupply = await this.contracts['MarketMakerFund'].totalSupply();\r\n        return Number(stakedLpSupply / (10 ** 18));\r\n    }\r\n\r\n    async getRewardPerToken(): Promise<number> {\r\n        const rewardPerToken = await this.contracts['MarketMakerFund'].rewardPerToken(0);\r\n        console.log(rewardPerToken)\r\n        return Number(rewardPerToken / (10 ** 18));\r\n    }\r\n\r\n    async getStartTime(): Promise<number> {\r\n        const starttime = await this.contracts['MarketMakerFund'].starttime();\r\n        return starttime.toNumber();\r\n    }\r\n\r\n    async getRainyDayFund(): Promise<number> {\r\n        const rainyDayFund = await this.contracts['PAVVault'].rainyDayFund();\r\n        return rainyDayFund.div(BigNumber.from(10).pow(14)).toNumber() / (10000);\r\n    }\r\n\r\n    async getTitiCirculation(): Promise<number> {\r\n        const totalSupply = await this.TITI.totalSupply();\r\n        const uniswapIncentive = this.contracts['TitiPairSwap'];\r\n        const tokenReserve = await uniswapIncentive.getReserves();\r\n        const marketMakerFund = this.contracts['MarketMakerFund'];\r\n        const totalReward = await marketMakerFund.totalReward();\r\n        return totalSupply.sub(tokenReserve._reserve1).sub(totalReward).div(BigNumber.from(10).pow(14)).toNumber() / (10000) - 100;\r\n    }\r\n\r\n    async getPRV(): Promise<number> {\r\n        const uniswapIncentive = this.contracts['TitiPairSwap'];\r\n        const tokenReserve = await uniswapIncentive.getReserves();\r\n        const coreController = this.contracts['CoreController'];\r\n        const mmfConfigs = await coreController.mmfConfigs(this.contracts['MarketMakerFund'].address);\r\n        //const rainyDayFund = await this.contracts['PAVVault'].rainyDayFund();\r\n\r\n        return tokenReserve._reserve0.sub(mmfConfigs.balance).div(BigNumber.from(10).pow(14)).toNumber() / (10000);\r\n    }\r\n\r\n    async getFeiTribeReserves(): Promise<number[]> {\r\n        const reserves = await this.contracts['IDO'].getReserves();\r\n        return [Number(reserves.feiReserves / (10 ** 18)), Number(reserves.tokenReserves / (10 ** 18))];\r\n    }\r\n\r\n    async getTokenPriceFromUniswap(tokenContract: ERC20): Promise<string> {\r\n        await this.provider.ready;\r\n\r\n        const { chainId } = this.config;\r\n        const { DAI } = this.config.externalTokens;\r\n\r\n        const dai = new Token(chainId, DAI[0], 18);\r\n        const token = new Token(chainId, tokenContract.address, 18);\r\n\r\n        try {\r\n            const daiToToken = await Fetcher.fetchPairData(dai, token, this.provider);\r\n            const priceInDAI = new Route([daiToToken], token);\r\n            return priceInDAI.midPrice.toSignificant(3);\r\n        } catch (err) {\r\n            console.error(`Failed to fetch token price of ${tokenContract.symbol}: ${err}`);\r\n        }\r\n    }\r\n\r\n    async buy(amount: BigNumber): Promise<TransactionResponse> {\r\n        const coreController = this.contracts[\"CoreController\"];\r\n        const gas = await coreController.estimateGas.buyTITI(amount);\r\n        return await coreController.buyTITI(amount, this.gasOptions(gas));\r\n    }\r\n\r\n    async sell(amount: BigNumber): Promise<TransactionResponse> {\r\n        const coreController = this.contracts[\"CoreController\"];\r\n        const gas = await coreController.estimateGas.sellTITI(amount);\r\n        return await coreController.sellTITI(amount, this.gasOptions(gas));\r\n    }\r\n\r\n    async stake(amount: BigNumber): Promise<TransactionResponse> {\r\n        const marketMakerFund = this.contracts[\"MarketMakerFund\"];\r\n        const gas = await marketMakerFund.estimateGas.stake(amount);\r\n        return await marketMakerFund.stake(amount, this.gasOptions(gas));\r\n    }\r\n\r\n    async exit(): Promise<TransactionResponse> {\r\n        const marketMakerFund = this.contracts[\"MarketMakerFund\"];\r\n        const gas = await marketMakerFund.estimateGas.exit();\r\n        return await marketMakerFund.exit(this.gasOptions(gas));\r\n    }\r\n\r\n    async claim(): Promise<TransactionResponse> {\r\n        const marketMakerFund = this.contracts[\"MarketMakerFund\"];\r\n        const gas = await marketMakerFund.estimateGas.getReward();\r\n        return await marketMakerFund.getReward(this.gasOptions(gas));\r\n    }\r\n\r\n    async reorders(): Promise<TransactionResponse> {\r\n        const coreController = this.contracts[\"CoreController\"];\r\n        const gas = await coreController.estimateGas.reorders();\r\n        return await coreController.reorders(this.gasOptions(gas));\r\n    }\r\n}\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport { useWallet } from 'use-wallet';\r\nimport BEICash from '../../titi-core-contracts';\r\nimport config from '../../config';\r\n\r\nexport interface BEICashContext {\r\n    beiCash?: BEICash;\r\n}\r\n\r\nexport const Context = createContext<BEICashContext>({ beiCash: null });\r\n\r\nexport const TiTiProvider: React.FC = ({ children }) => {\r\n    const { ethereum, account } = useWallet();\r\n    const [beiCash, setBEICash] = useState<BEICash>();\r\n\r\n    useEffect(() => {\r\n        if (!beiCash) {\r\n            const newBeiCash = new BEICash(config);\r\n            if (account) {\r\n                // wallet was unlocked at initialization\r\n                newBeiCash.unlockWallet(ethereum, account);\r\n            }\r\n            setBEICash(newBeiCash);\r\n        } else if (account) {\r\n            beiCash.unlockWallet(ethereum, account);\r\n        }\r\n    }, [ethereum, beiCash, account]);\r\n\r\n    return <Context.Provider value={{ beiCash }}>{children}</Context.Provider>;\r\n};\r\n","import React, { createContext, useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ModalsContext {\r\n    content?: React.ReactNode,\r\n    isOpen?: boolean,\r\n    onPresent: (content: React.ReactNode) => void,\r\n    onDismiss: () => void\r\n}\r\n\r\nexport const Context = createContext<ModalsContext>({\r\n    onPresent: () => {},\r\n    onDismiss: () => {},\r\n})\r\n\r\nconst Modals: React.FC = ({ children }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [content, setContent] = useState<React.ReactNode>()\r\n\r\n    const handlePresent = useCallback((modalContent: React.ReactNode) => {\r\n        setContent(modalContent)\r\n        setIsOpen(true)\r\n    }, [setContent, setIsOpen])\r\n\r\n    const handleDismiss = useCallback(() => {\r\n        setContent(undefined)\r\n        setIsOpen(false)\r\n    }, [setContent, setIsOpen])\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            content,\r\n            isOpen,\r\n            onPresent: handlePresent,\r\n            onDismiss: handleDismiss,\r\n        }}>\r\n            {children}\r\n            {isOpen && (\r\n                <StyledModalWrapper>\r\n                    <StyledModalBackdrop onClick={handleDismiss} />\r\n                    {React.isValidElement(content) && React.cloneElement(content, {\r\n                        onDismiss: handleDismiss,\r\n                    })}\r\n                </StyledModalWrapper>\r\n            )}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nconst StyledModalWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n`\r\n\r\nconst StyledModalBackdrop = styled.div`\r\n  background-color: #00000088;\r\n  position: absolute;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n`\r\n\r\nexport default Modals\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import styled from 'styled-components'\r\n\r\nconst Row = styled.div<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => (align ? align : 'center')};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import React, { useContext } from 'react';\r\nimport { AlertCircle, CheckCircle } from 'react-feather';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport { AutoColumn } from '../Column';\r\nimport { AutoRow } from '../Row';\r\nimport { useWallet } from 'use-wallet';\r\nimport config from '../../config';\r\n\r\nconst RowNoFlex = styled(AutoRow)`\r\n  flex-wrap: nowrap;\r\n`;\r\n\r\nexport default function TransactionPopup({\r\n                                             hash,\r\n                                             success,\r\n                                             summary,\r\n                                         }: {\r\n    hash: string;\r\n    success?: boolean;\r\n    summary?: string;\r\n}) {\r\n    const { chainId } = useWallet();\r\n    const theme = useContext(ThemeContext);\r\n\r\n    return (\r\n        <RowNoFlex>\r\n            <div style={{ paddingRight: 16 }}>\r\n                {success ? (\r\n                    <CheckCircle color={theme.color.teal[200]} size={24} />\r\n                ) : (\r\n                    <AlertCircle color=\"#FF6871\" size={24} />\r\n                )}\r\n            </div>\r\n            <AutoColumn gap=\"8px\">\r\n                <StyledPopupDesc>\r\n                    {summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}\r\n                </StyledPopupDesc>\r\n                {chainId && (\r\n                    <StyledLink href={`${config.etherscanUrl}/tx/${hash}`}>View on Etherscan</StyledLink>\r\n                )}\r\n            </AutoColumn>\r\n        </RowNoFlex>\r\n    );\r\n}\r\n\r\nconst StyledPopupDesc = styled.span`\r\n  font-weight: 500;\r\n  color: ${props => props.theme.color.grey[300]};\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  color: ${props => props.theme.color.grey[500]};\r\n`;\r\n","import React, { useCallback } from 'react';\r\nimport { AlertCircle } from 'react-feather';\r\nimport styled from 'styled-components';\r\nimport { AutoColumn } from '../Column';\r\nimport { AutoRow } from '../Row';\r\n\r\nconst RowNoFlex = styled(AutoRow)`\r\n  flex-wrap: nowrap;\r\n`;\r\n\r\nexport default function ErrorPopup({ message, stack }: { message: string; stack: string }) {\r\n    const copyErrorDetails = useCallback(async () => {\r\n        await navigator.clipboard.writeText(`${message}\\n${stack}`);\r\n    }, [message, stack]);\r\n\r\n    return (\r\n        <RowNoFlex>\r\n            <div style={{ paddingRight: 16 }}>\r\n                <AlertCircle color=\"#FF6871\" size={24} />\r\n            </div>\r\n            <AutoColumn gap=\"8px\">\r\n                <StyledPopupDesc>{message}</StyledPopupDesc>\r\n                <StyledLink onClick={copyErrorDetails} href=\"#\">Copy error details</StyledLink>\r\n            </AutoColumn>\r\n        </RowNoFlex>\r\n    );\r\n}\r\n\r\nconst StyledPopupDesc = styled.span`\r\n  font-weight: 500;\r\n  color: ${(props) => props.theme.color.grey[300]};\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  color: ${(props) => props.theme.color.grey[500]};\r\n`;\r\n","import React, { useCallback, useContext, useEffect } from 'react';\r\nimport { X } from 'react-feather';\r\nimport { useSpring } from 'react-spring/web';\r\nimport styled, { ThemeContext } from 'styled-components';\r\nimport { animated } from 'react-spring';\r\nimport { PopupContent } from '../../state/application/actions';\r\nimport { useRemovePopup } from '../../state/application/hooks';\r\nimport TransactionPopup from './TransactionPopup';\r\nimport ErrorPopup from './ErrorPopup';\r\n\r\nexport const StyledClose = styled(X)`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const Popup = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 1em;\r\n  background-color: ${({ theme }) => theme.color.grey[700]};\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  padding-right: 35px;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 768px) {\r\n    min-width: 290px;\r\n  }\r\n`;\r\nconst Fader = styled.div`\r\n  position: absolute;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: ${({ theme }) => theme.color.grey[400]};\r\n`;\r\n\r\nconst AnimatedFader = animated(Fader);\r\n\r\nexport default function PopupItem({\r\n                                      removeAfterMs,\r\n                                      content,\r\n                                      popKey,\r\n                                  }: {\r\n    removeAfterMs: number | null;\r\n    content: PopupContent;\r\n    popKey: string;\r\n}) {\r\n    const removePopup = useRemovePopup();\r\n    const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\r\n    useEffect(() => {\r\n        if (removeAfterMs === null) return undefined;\r\n\r\n        const timeout = setTimeout(() => {\r\n            removeThisPopup();\r\n        }, removeAfterMs);\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [removeAfterMs, removeThisPopup]);\r\n\r\n    const theme = useContext(ThemeContext);\r\n\r\n    let popupContent;\r\n    if ('txn' in content) {\r\n        const {\r\n            txn: { hash, success, summary },\r\n        } = content;\r\n        popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />;\r\n    }\r\n    if ('error' in content) {\r\n        const { error: { message, stack } } = content;\r\n        popupContent = <ErrorPopup message={message} stack={stack} />\r\n    }\r\n\r\n    const faderStyle = useSpring({\r\n        from: { width: '100%' },\r\n        to: { width: '0%' },\r\n        config: { duration: removeAfterMs ?? undefined },\r\n    });\r\n\r\n    return (\r\n        <Popup>\r\n            <StyledClose color={theme.text2} onClick={removeThisPopup} />\r\n            {popupContent}\r\n            {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\r\n        </Popup>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useActivePopups } from '../../state/application/hooks'\r\nimport { AutoColumn } from '../Column'\r\nimport PopupItem from './PopupItem'\r\n\r\nconst MobilePopupWrapper = styled.div<{ height: string | number }>`\r\n  position: relative;\r\n  max-width: 100%;\r\n  height: ${({ height }) => height};\r\n  margin: ${({ height }) => (height ? '0 auto;' : 0)};\r\n  margin-bottom: ${({ height }) => (height ? '20px' : 0)}};\r\n\r\n  display: none;\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  };\r\n`\r\n\r\nconst MobilePopupInner = styled.div`\r\n  height: 99%;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  display: flex;\r\n  flex-direction: row;\r\n  -webkit-overflow-scrolling: touch;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst FixedPopupColumn = styled(AutoColumn)`\r\n  position: fixed;\r\n  top: 64px;\r\n  margin-right: 24px;\r\n  right: 3rem;\r\n  max-width: 355px !important;\r\n  width: 100%;\r\n  z-index: 2;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  };\r\n`\r\n\r\nexport default function Popups() {\r\n    // get all popups\r\n    const activePopups = useActivePopups()\r\n\r\n    return (\r\n        <>\r\n            <FixedPopupColumn gap=\"20px\">\r\n                {activePopups.map(item => (\r\n                    <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\r\n                ))}\r\n            </FixedPopupColumn>\r\n            <MobilePopupWrapper height={activePopups?.length > 0 ? 'fit-content' : 0}>\r\n                <MobilePopupInner>\r\n                    {activePopups // reverse so new items up front\r\n                        .slice(0)\r\n                        .reverse()\r\n                        .map(item => (\r\n                            <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\r\n                        ))}\r\n                </MobilePopupInner>\r\n            </MobilePopupWrapper>\r\n        </>\r\n    )\r\n}\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    addTransaction,\r\n    checkedTransaction,\r\n    clearAllTransactions,\r\n    finalizeTransaction,\r\n    SerializableTransactionReceipt,\r\n} from './actions';\r\n\r\nconst now = () => new Date().getTime();\r\n\r\nexport interface TransactionDetails {\r\n    hash: string;\r\n    approval?: { tokenAddress: string; spender: string };\r\n    approvalForAll?: { tokenAddress: string; spender: string; approved: boolean};\r\n    summary?: string;\r\n    receipt?: SerializableTransactionReceipt;\r\n    lastCheckedBlockNumber?: number;\r\n    addedTime: number;\r\n    confirmedTime?: number;\r\n    from: string;\r\n}\r\n\r\nexport interface TransactionState {\r\n    [chainId: number]: {\r\n        [txHash: string]: TransactionDetails;\r\n    };\r\n}\r\n\r\nexport const initialState: TransactionState = {};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n    builder\r\n        .addCase(\r\n            addTransaction,\r\n            (transactions, { payload: { chainId, from, hash, approval, approvalForAll, summary } }) => {\r\n                if (transactions[chainId]?.[hash]) {\r\n                    throw Error('Attempted to add existing transaction.');\r\n                }\r\n                const txs = transactions[chainId] ?? {};\r\n                txs[hash] = { hash, approval, approvalForAll, summary, from, addedTime: now() };\r\n                transactions[chainId] = txs;\r\n            },\r\n        )\r\n        .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n            if (!transactions[chainId]) return;\r\n            transactions[chainId] = {};\r\n        })\r\n        .addCase(\r\n            checkedTransaction,\r\n            (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n                const tx = transactions[chainId]?.[hash];\r\n                if (!tx) {\r\n                    return;\r\n                }\r\n                if (!tx.lastCheckedBlockNumber) {\r\n                    tx.lastCheckedBlockNumber = blockNumber;\r\n                } else {\r\n                    tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\r\n                }\r\n            },\r\n        )\r\n        .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n            const tx = transactions[chainId]?.[hash];\r\n            if (!tx) {\r\n                return;\r\n            }\r\n            tx.receipt = receipt;\r\n            tx.confirmedTime = now();\r\n        }),\r\n);\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit';\r\nimport {\r\n    addPopup,\r\n    PopupContent,\r\n    removePopup,\r\n    toggleWalletModal,\r\n    toggleSettingsMenu,\r\n    updateBlockNumber,\r\n} from './actions';\r\n\r\ntype PopupList = Array<{\r\n    key: string;\r\n    show: boolean;\r\n    content: PopupContent;\r\n    removeAfterMs: number | null;\r\n}>;\r\n\r\nexport interface ApplicationState {\r\n    blockNumber: { [chainId: number]: number };\r\n    popupList: PopupList;\r\n    walletModalOpen: boolean;\r\n    settingsMenuOpen: boolean;\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n    blockNumber: {},\r\n    popupList: [],\r\n    walletModalOpen: false,\r\n    settingsMenuOpen: false,\r\n};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n    builder\r\n        .addCase(updateBlockNumber, (state, action) => {\r\n            const { chainId, blockNumber } = action.payload;\r\n            if (typeof state.blockNumber[chainId] !== 'number') {\r\n                state.blockNumber[chainId] = blockNumber;\r\n            } else {\r\n                state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\r\n            }\r\n        })\r\n        .addCase(toggleWalletModal, (state) => {\r\n            state.walletModalOpen = !state.walletModalOpen;\r\n        })\r\n        .addCase(toggleSettingsMenu, (state) => {\r\n            state.settingsMenuOpen = !state.settingsMenuOpen;\r\n        })\r\n        .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\r\n            state.popupList = (key\r\n                    ? state.popupList.filter((popup) => popup.key !== key)\r\n                    : state.popupList\r\n            ).concat([\r\n                {\r\n                    key: key || nanoid(),\r\n                    show: true,\r\n                    content,\r\n                    removeAfterMs,\r\n                },\r\n            ]);\r\n        })\r\n        .addCase(removePopup, (state, { payload: { key } }) => {\r\n            state.popupList.forEach((p) => {\r\n                if (p.key === key) {\r\n                    p.show = false;\r\n                }\r\n            });\r\n        }),\r\n);\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { save, load } from 'redux-localstorage-simple';\r\nimport transactions from './transactions/reducer';\r\nimport application from './application/reducer';\r\n\r\nconst PERSISTED_KEYS: string[] = ['transactions'];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        application,\r\n        transactions,\r\n    },\r\n    middleware: [...getDefaultMiddleware({ thunk: false }), save({ states: PERSISTED_KEYS })],\r\n    preloadedState: load({ states: PERSISTED_KEYS }),\r\n});\r\n\r\nexport default store;\r\n\r\nexport type AppState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","export const white = '#FFF'\r\nexport const black = '#000'\r\n\r\nexport const green = {\r\n  500: '#00D110',\r\n}\r\n\r\nexport const blue = {\r\n  100: '#00B6FF',\r\n  200: '#2C6DFA',\r\n  400: '#021EFF',\r\n  600: '#001090',\r\n}\r\n\r\nexport const purple = {\r\n  200: '#bd7cfe',\r\n  400: '#ab47bc',\r\n  700: '#7b1fa2',\r\n}\r\n\r\nexport const red = {\r\n  100: '#7b1fa2',\r\n  200: '#7575FF',\r\n  300: '#FFA500',\r\n  500: '#9090FF',\r\n}\r\n\r\nexport const orange = {\r\n  100: '#FFA500',\r\n  200: '#5ACB33',\r\n  300: '#299903',\r\n  400: '#FFCE00',\r\n}\r\n\r\nexport const grey = {\r\n  100: '#F7F9FB',\r\n  200: '#eeeeee',\r\n  300: '#e0e0e0',\r\n  400: '#bdbdbd',\r\n  500: '#9e9e9e',\r\n  600: '#757575',\r\n  700: '#616161',\r\n  800: '#424242',\r\n  900: '#212121',\r\n}\r\n\r\nexport const yellow = '#FFFD8A'\r\n\r\nexport const bg = '#000000';\r\n\r\nexport const teal = {\r\n  200: '#9e9e9e'\r\n}\r\n","import { black, purple, teal, grey, red, white, blue, yellow, orange, green } from './colors'\r\n\r\nconst theme = {\r\n  borderRadius: 12,\r\n  color: {\r\n    black,\r\n    yellow,\r\n    grey,\r\n    orange,\r\n    blue,\r\n    purple,\r\n    green,\r\n    red,\r\n    primary: {\r\n      light: red[200],\r\n      main: grey[100],\r\n    },\r\n    secondary: {\r\n      main: teal[200],\r\n    },\r\n    white,\r\n    teal,\r\n  },\r\n  siteWidth: 1200,\r\n  spacing: {\r\n    1: 4,\r\n    2: 8,\r\n    3: 16,\r\n    4: 24,\r\n    5: 32,\r\n    6: 48,\r\n    7: 64,\r\n    8: 160,\r\n  },\r\n  stickyTopBarBG: 'rgba(0, 0, 0, 0.9)',\r\n  topBarBG: 'translate',\r\n  stickyTopBarSize: 60,\r\n  topBarSize: 72,\r\n  downBarSize: 50\r\n}\r\n\r\nexport default theme\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\nimport './App.css'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { UseWalletProvider } from 'use-wallet'\r\nimport Updaters from './state/Updaters'\r\nimport TiTiProvider from './contexts/TiTiProvider'\r\nimport ModalsProvider from './contexts/Modals'\r\nimport Popups from './components/Popups'\r\nimport store from './state'\r\nimport theme from './theme'\r\nimport config from './config'\r\nimport Loadable from './components/Loadable'\r\n// import Home from \"./views/Home\";\r\n// import Dashboard from \"./views/Dashboard\";\r\n// import Exchange from \"./views/Exchange\";\r\n// import LPPools from \"./views/LPPools\";\r\n// import ReOrders from \"./views/ReOrders\";\r\n\r\nconst Home = Loadable(() => import('./views/Home'))\r\n// const Dashboard = Loadable(() => import('./views/Dashboard'))\r\n// const Exchange = Loadable(() => import('./views/Exchange'))\r\n// const LPPools = Loadable(() => import('./views/LPPools'))\r\n// const ReOrders = Loadable(() => import('./views/ReOrders'))\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Providers>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Home />\r\n          </Route>\r\n          {/* <Route path=\"/mamms\" exact>\r\n                        <Exchange />\r\n                    </Route>\r\n                    <Route path=\"/mmfs\">\r\n                        <LPPools />\r\n                    </Route>\r\n                    <Route path=\"/reorders\" exact>\r\n                        <ReOrders />\r\n                    </Route>\r\n                    <Route path=\"/dashboard\" exact>\r\n                        <Dashboard />\r\n                    </Route> */}\r\n          <Redirect to=\"/\"></Redirect>\r\n        </Switch>\r\n      </Router>\r\n    </Providers>\r\n  )\r\n}\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <UseWalletProvider chainId={config.chainId}>\r\n        <Provider store={store}>\r\n          <Updaters />\r\n          <TiTiProvider>\r\n            <ModalsProvider>\r\n              <Popups />\r\n              {children}\r\n            </ModalsProvider>\r\n          </TiTiProvider>\r\n        </Provider>\r\n      </UseWalletProvider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}